syntax = "proto3";

import "domain.proto";

option csharp_namespace = "GrpcPermissions";

package permissions;

service PermissionsService {
  rpc GetPermissions(GetPermissionsRequest) returns (GetPermissionsReply);
  rpc SetIsPublic(SetIsPublicRequest) returns (SetIsPublicReply);
  rpc GetAccess(GetAccessRequest) returns (GetAccessReply);
  rpc UpdatePermissions(UpdatePermissionsRequest)
      returns (UpdatePermissionsReply);
  rpc AddMembers(AddMembersRequest) returns (AddMembersReply);
  rpc RemoveMembers(RemoveMembersRequest) returns (RemoveMembersReply);
}

message RemoveMembersReply {
  enum Status {
    OK = 0;
    UNKNOWN = 1;
    NO_ACCESS = 2;
    ITEM_NOT_FOUND = 3;
  }

  message GroupEntry {
    string group_id = 1;
    Status status = 2;
  }

  message UserEntry {
    string user_id = 1;
    Status status = 2;
  }

  repeated UserEntry users = 1;
  repeated GroupEntry groups = 2;
}

message RemoveMembersRequest {
  domain.ProtectedItem protectedItem = 1;
  repeated string users = 2;
  repeated string groups = 3;
}

message AddMembersReply {
  enum Status {
    OK = 0;
    UNKNOWN = 1;
    NO_ACCESS = 2;
    ITEM_NOT_FOUND = 3;
  }

  message GroupEntry {
    string group_id = 1;
    Status status = 2;
  }

  message UserEntry {
    string user_id = 1;
    Status status = 2;
  }

  repeated UserEntry users = 1;
  repeated GroupEntry groups = 2;
}

message AddMembersRequest {
  domain.ProtectedItem protectedItem = 1;
  repeated string users = 2;
  repeated string groups = 3;
}

message UpdatePermissionsReply {
  enum Status {
    OK = 0;
    UNKNOWN = 1;
    NO_ACCESS = 2;
    ITEM_NOT_FOUND = 3;
  }

  message GroupEntry {
    string group_id = 1;
    Status status = 2;
  }

  message UserEntry {
    string user_id = 1;
    Status status = 2;
  }

  repeated UserEntry users = 1;
  repeated GroupEntry groups = 2;
}

message UpdatePermissionsRequest {
  message GroupEntry {
    string group_id = 1;
    domain.Access access = 2;
  }

  message UserEntry {
    string user_id = 1;
    domain.Access access = 2;
  }

  domain.ProtectedItem protectedItem = 1;
  repeated UserEntry users = 2;
  repeated GroupEntry groups = 3;
}

message GetAccessReply {
  map<string, domain.Access> access = 1;
}

message GetAccessRequest { repeated domain.ProtectedItem protectedItems = 1; }

message SetIsPublicReply {
  message Error {
    string description = 1;
    enum Status {
      UNKNOWN = 0;
      NO_ACCESS = 1;
      WRONG_REQUEST = 2;
    }
    Status status = 2;
  }
  oneof result {
    Error error = 1;
  }
}

message SetIsPublicRequest {
  bool is_public = 1;
  domain.ProtectedItem protectedItem = 2;
}

message GetPermissionsReply {
  message Error {
    string description = 1;
    enum Status {
      UNKNOWN = 0;
      NO_ACCESS = 1;
      WRONG_REQUEST = 2;
    }
    Status status = 2;
  }
  oneof result {
    domain.Permissions permissions = 1;
    Error error = 2;
  }
}

message GetPermissionsRequest { domain.ProtectedItem item = 1; }
