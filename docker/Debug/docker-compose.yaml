version: '3'
services:
  postgres:
    image: postgres
    container_name: "user-db"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: "keycloak"
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Pa55w0rd
    command: -b 0.0.0.0 -Djboss.http.port=8080 -Dkeycloak.profile.feature.upload_scripts=enabled -Dkeycloak.migration.action=import -Dkeycloak.migration.provider=singleFile -Dkeycloak.migration.file=/tmp/dev-realm.json -Dkeycloak.migration.strategy=IGNORE_EXISTING
    volumes:
    - ./dev-realm.json:/tmp/dev-realm.json:ro
    ports:
      - 80:8080
    depends_on:
      - postgres
  cs-generator:
    image: "cs-generator:latest"
    container_name: "cs-generator"
    build:
      context: ./../..
      dockerfile: ./docker/Debug/CSharpGenerator.Dockerfile
    environment:
    - ASPNETCORE_ENVIRONMENT=Development
    ports:
    - "8081:80"
  web:
    image: "template-service:latest"
    container_name: "template-service"
    build:
      context: ./../..
      dockerfile: ./docker/Debug/WebApi.Dockerfile
    environment:
    - ASPNETCORE_ENVIRONMENT=Development
    ports:
    - "8080:80"
    links:
    - db:database
    - keycloak:keycloak
    - cs-generator:cs-generator
  db:
    image: "database-service:latest"
    container_name: "database-service"
    volumes:
      - db-volume:/opt/couchbase/var/lib/couchbase/data
    build:
      context: .
      dockerfile: ./Couchbase.Dockerfile
    ports:
    - "8091:8091"
volumes:
  db-volume:
  postgres_data: