version: '3.8'
services:
  cs-generator:
    image: "cs-generator:0.1-alpha"
    container_name: "cs-generator"
    restart: always
    build:
      context: ./../..
      dockerfile: ./docker/Release/CSharpGenerator.Dockerfile
    ports:
    - "80"
    networks:
      default:
        ipv4_address: 10.5.0.2
  identity-server:
    image: "auth-service:0.1-alpha"
    container_name: "auth-service"
    restart: always
    build:
      context: ./../..
      dockerfile: ./docker/Release/IdentityServer.Dockerfile
    ports:
    - "80"
    links:
    - db:database
    networks:
      default:
        ipv4_address: 10.5.0.3
  api:
    image: "template-service:0.1-alpha"
    container_name: "template-service"
    restart: always
    build:
      context: ./../..
      dockerfile: ./docker/Release/WebApi.Dockerfile
    ports:
    - "80"
    links:
    - db:database
    - identity-server:identity-server
    - cs-generator:cs-generator
    networks:
      default:
        ipv4_address: 10.5.0.4
  db:
    image: "database-service:0.1-alpha"
    container_name: "database-service"
    restart: always
    volumes:
      - db-volume:/opt/couchbase/var/lib/couchbase/data
    build:
      context: .
      dockerfile: Couchbase.Dockerfile
    ports:
    - "8091:8091"
    networks:
      default:
        ipv4_address: 10.5.0.5
  ui:
    image: "react-ui:0.1-alpha"
    container_name: "react-ui"
    restart: always
    build:
      context: ./../../react-ui
      dockerfile: ./../docker/Release/ReactUI.Dockerfile
    ports:
    - "80"
    networks:
      default:
        ipv4_address: 10.5.0.6
  master:
    image: "master-node:0.1-alpha"
    container_name: "master-node"
    restart: always
    build:
      context: .
      dockerfile: Master.Dockerfile
    networks:
      default:
        ipv4_address: 10.5.0.7
    ports:
    - "80:80"
    links:
    - identity-server:auth-server
    - api:api-server
    - ui:ui-server
    - grafana:grafana-server
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
    - 3000:3000
    volumes:
    - grafana-volume:/vol01/Docker/monitoring
    links:
    - influxdb:influxdb-server
    networks:
      default:
        ipv4_address: 10.5.0.8
  influxdb:
    image: influxdb
    container_name: influxdb
    restart: always
    ports:
    - 8086:8086
    volumes:
    - influxdb-volume:/vol01/Docker/monitoring
    environment:
    - INFLUXDB_DB=telegraf
    - INFLUXDB_USER=telegraf
    - INFLUXDB_ADMIN_ENABLED=true
    - INFLUXDB_ADMIN_USER=admin
    - INFLUXDB_ADMIN_PASSWORD=telegraf
    networks:
      default:
        ipv4_address: 10.5.0.9
  telegraf:
    image: telegraf
    container_name: telegraf
    restart: always
    links:
    - identity-server:auth-server
    - api:api-server
    - db:couchbase-server
    - master:master-server
    - influxdb:influxdb-server
    - cs-generator:cs-generator-server
    environment:
      HOST_PROC: /rootfs/proc
      HOST_SYS: /rootfs/sys
      HOST_ETC: /rootfs/etc
    volumes:
    - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - /sys:/rootfs/sys:ro
    - /proc:/rootfs/proc:ro
    - /etc:/rootfs/etc:ro
    networks:
      default:
        ipv4_address: 10.5.0.10
networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 10.5.0.0/16
volumes:
  db-volume:
  grafana-volume:
  influxdb-volume: