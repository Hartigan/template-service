/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
var domain_pb = require('./domain_pb.js');
goog.exportSymbol('proto.version.GetCommitReply', null, global);
goog.exportSymbol('proto.version.GetCommitReply.Error', null, global);
goog.exportSymbol('proto.version.GetCommitReply.Error.Status', null, global);
goog.exportSymbol('proto.version.GetCommitRequest', null, global);
goog.exportSymbol('proto.version.GetHeadsReply', null, global);
goog.exportSymbol('proto.version.GetHeadsReply.Entry', null, global);
goog.exportSymbol('proto.version.GetHeadsReply.Status', null, global);
goog.exportSymbol('proto.version.GetHeadsRequest', null, global);
goog.exportSymbol('proto.version.SearchReply', null, global);
goog.exportSymbol('proto.version.SearchReply.Error', null, global);
goog.exportSymbol('proto.version.SearchReply.Error.Status', null, global);
goog.exportSymbol('proto.version.SearchReply.HeadList', null, global);
goog.exportSymbol('proto.version.SearchRequest', null, global);
goog.exportSymbol('proto.version.UpdateTagsReply', null, global);
goog.exportSymbol('proto.version.UpdateTagsReply.Error', null, global);
goog.exportSymbol('proto.version.UpdateTagsReply.Error.Status', null, global);
goog.exportSymbol('proto.version.UpdateTagsRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.version.UpdateTagsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.version.UpdateTagsReply.oneofGroups_);
};
goog.inherits(proto.version.UpdateTagsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.version.UpdateTagsReply.displayName = 'proto.version.UpdateTagsReply';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.version.UpdateTagsReply.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.version.UpdateTagsReply.ResultCase = {
  RESULT_NOT_SET: 0,
  ERROR: 1
};

/**
 * @return {proto.version.UpdateTagsReply.ResultCase}
 */
proto.version.UpdateTagsReply.prototype.getResultCase = function() {
  return /** @type {proto.version.UpdateTagsReply.ResultCase} */(jspb.Message.computeOneofCase(this, proto.version.UpdateTagsReply.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.version.UpdateTagsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.version.UpdateTagsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.version.UpdateTagsReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.UpdateTagsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: (f = msg.getError()) && proto.version.UpdateTagsReply.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.version.UpdateTagsReply}
 */
proto.version.UpdateTagsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.version.UpdateTagsReply;
  return proto.version.UpdateTagsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.version.UpdateTagsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.version.UpdateTagsReply}
 */
proto.version.UpdateTagsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.version.UpdateTagsReply.Error;
      reader.readMessage(value,proto.version.UpdateTagsReply.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.version.UpdateTagsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.version.UpdateTagsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.version.UpdateTagsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.UpdateTagsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.version.UpdateTagsReply.Error.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.version.UpdateTagsReply.Error = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.version.UpdateTagsReply.Error, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.version.UpdateTagsReply.Error.displayName = 'proto.version.UpdateTagsReply.Error';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.version.UpdateTagsReply.Error.prototype.toObject = function(opt_includeInstance) {
  return proto.version.UpdateTagsReply.Error.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.version.UpdateTagsReply.Error} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.UpdateTagsReply.Error.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.version.UpdateTagsReply.Error}
 */
proto.version.UpdateTagsReply.Error.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.version.UpdateTagsReply.Error;
  return proto.version.UpdateTagsReply.Error.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.version.UpdateTagsReply.Error} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.version.UpdateTagsReply.Error}
 */
proto.version.UpdateTagsReply.Error.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = /** @type {!proto.version.UpdateTagsReply.Error.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.version.UpdateTagsReply.Error.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.version.UpdateTagsReply.Error.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.version.UpdateTagsReply.Error} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.UpdateTagsReply.Error.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.version.UpdateTagsReply.Error.Status = {
  UNKNOWN: 0,
  NO_ACCESS: 1
};

/**
 * optional string description = 1;
 * @return {string}
 */
proto.version.UpdateTagsReply.Error.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.version.UpdateTagsReply.Error.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.version.UpdateTagsReply.Error.Status}
 */
proto.version.UpdateTagsReply.Error.prototype.getStatus = function() {
  return /** @type {!proto.version.UpdateTagsReply.Error.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.version.UpdateTagsReply.Error.Status} value */
proto.version.UpdateTagsReply.Error.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Error error = 1;
 * @return {?proto.version.UpdateTagsReply.Error}
 */
proto.version.UpdateTagsReply.prototype.getError = function() {
  return /** @type{?proto.version.UpdateTagsReply.Error} */ (
    jspb.Message.getWrapperField(this, proto.version.UpdateTagsReply.Error, 1));
};


/** @param {?proto.version.UpdateTagsReply.Error|undefined} value */
proto.version.UpdateTagsReply.prototype.setError = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.version.UpdateTagsReply.oneofGroups_[0], value);
};


proto.version.UpdateTagsReply.prototype.clearError = function() {
  this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.version.UpdateTagsReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.version.UpdateTagsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.version.UpdateTagsRequest.repeatedFields_, null);
};
goog.inherits(proto.version.UpdateTagsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.version.UpdateTagsRequest.displayName = 'proto.version.UpdateTagsRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.version.UpdateTagsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.version.UpdateTagsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.version.UpdateTagsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.version.UpdateTagsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.UpdateTagsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    headId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tagsList: jspb.Message.getRepeatedField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.version.UpdateTagsRequest}
 */
proto.version.UpdateTagsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.version.UpdateTagsRequest;
  return proto.version.UpdateTagsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.version.UpdateTagsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.version.UpdateTagsRequest}
 */
proto.version.UpdateTagsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeadId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.version.UpdateTagsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.version.UpdateTagsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.version.UpdateTagsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.UpdateTagsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeadId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string head_id = 1;
 * @return {string}
 */
proto.version.UpdateTagsRequest.prototype.getHeadId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.version.UpdateTagsRequest.prototype.setHeadId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string tags = 2;
 * @return {!Array.<string>}
 */
proto.version.UpdateTagsRequest.prototype.getTagsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array.<string>} value */
proto.version.UpdateTagsRequest.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.version.UpdateTagsRequest.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.version.UpdateTagsRequest.prototype.clearTagsList = function() {
  this.setTagsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.version.SearchReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.version.SearchReply.oneofGroups_);
};
goog.inherits(proto.version.SearchReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.version.SearchReply.displayName = 'proto.version.SearchReply';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.version.SearchReply.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.version.SearchReply.ResultCase = {
  RESULT_NOT_SET: 0,
  HEADS: 1,
  ERROR: 2
};

/**
 * @return {proto.version.SearchReply.ResultCase}
 */
proto.version.SearchReply.prototype.getResultCase = function() {
  return /** @type {proto.version.SearchReply.ResultCase} */(jspb.Message.computeOneofCase(this, proto.version.SearchReply.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.version.SearchReply.prototype.toObject = function(opt_includeInstance) {
  return proto.version.SearchReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.version.SearchReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.SearchReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    heads: (f = msg.getHeads()) && proto.version.SearchReply.HeadList.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.version.SearchReply.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.version.SearchReply}
 */
proto.version.SearchReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.version.SearchReply;
  return proto.version.SearchReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.version.SearchReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.version.SearchReply}
 */
proto.version.SearchReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.version.SearchReply.HeadList;
      reader.readMessage(value,proto.version.SearchReply.HeadList.deserializeBinaryFromReader);
      msg.setHeads(value);
      break;
    case 2:
      var value = new proto.version.SearchReply.Error;
      reader.readMessage(value,proto.version.SearchReply.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.version.SearchReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.version.SearchReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.version.SearchReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.SearchReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeads();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.version.SearchReply.HeadList.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.version.SearchReply.Error.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.version.SearchReply.HeadList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.version.SearchReply.HeadList.repeatedFields_, null);
};
goog.inherits(proto.version.SearchReply.HeadList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.version.SearchReply.HeadList.displayName = 'proto.version.SearchReply.HeadList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.version.SearchReply.HeadList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.version.SearchReply.HeadList.prototype.toObject = function(opt_includeInstance) {
  return proto.version.SearchReply.HeadList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.version.SearchReply.HeadList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.SearchReply.HeadList.toObject = function(includeInstance, msg) {
  var f, obj = {
    headsList: jspb.Message.toObjectList(msg.getHeadsList(),
    domain_pb.Head.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.version.SearchReply.HeadList}
 */
proto.version.SearchReply.HeadList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.version.SearchReply.HeadList;
  return proto.version.SearchReply.HeadList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.version.SearchReply.HeadList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.version.SearchReply.HeadList}
 */
proto.version.SearchReply.HeadList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new domain_pb.Head;
      reader.readMessage(value,domain_pb.Head.deserializeBinaryFromReader);
      msg.addHeads(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.version.SearchReply.HeadList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.version.SearchReply.HeadList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.version.SearchReply.HeadList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.SearchReply.HeadList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeadsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      domain_pb.Head.serializeBinaryToWriter
    );
  }
};


/**
 * repeated domain.Head heads = 1;
 * @return {!Array.<!proto.domain.Head>}
 */
proto.version.SearchReply.HeadList.prototype.getHeadsList = function() {
  return /** @type{!Array.<!proto.domain.Head>} */ (
    jspb.Message.getRepeatedWrapperField(this, domain_pb.Head, 1));
};


/** @param {!Array.<!proto.domain.Head>} value */
proto.version.SearchReply.HeadList.prototype.setHeadsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.domain.Head=} opt_value
 * @param {number=} opt_index
 * @return {!proto.domain.Head}
 */
proto.version.SearchReply.HeadList.prototype.addHeads = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.domain.Head, opt_index);
};


proto.version.SearchReply.HeadList.prototype.clearHeadsList = function() {
  this.setHeadsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.version.SearchReply.Error = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.version.SearchReply.Error, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.version.SearchReply.Error.displayName = 'proto.version.SearchReply.Error';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.version.SearchReply.Error.prototype.toObject = function(opt_includeInstance) {
  return proto.version.SearchReply.Error.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.version.SearchReply.Error} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.SearchReply.Error.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.version.SearchReply.Error}
 */
proto.version.SearchReply.Error.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.version.SearchReply.Error;
  return proto.version.SearchReply.Error.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.version.SearchReply.Error} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.version.SearchReply.Error}
 */
proto.version.SearchReply.Error.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = /** @type {!proto.version.SearchReply.Error.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.version.SearchReply.Error.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.version.SearchReply.Error.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.version.SearchReply.Error} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.SearchReply.Error.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.version.SearchReply.Error.Status = {
  UNKNOWN: 0
};

/**
 * optional string description = 1;
 * @return {string}
 */
proto.version.SearchReply.Error.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.version.SearchReply.Error.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.version.SearchReply.Error.Status}
 */
proto.version.SearchReply.Error.prototype.getStatus = function() {
  return /** @type {!proto.version.SearchReply.Error.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.version.SearchReply.Error.Status} value */
proto.version.SearchReply.Error.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional HeadList heads = 1;
 * @return {?proto.version.SearchReply.HeadList}
 */
proto.version.SearchReply.prototype.getHeads = function() {
  return /** @type{?proto.version.SearchReply.HeadList} */ (
    jspb.Message.getWrapperField(this, proto.version.SearchReply.HeadList, 1));
};


/** @param {?proto.version.SearchReply.HeadList|undefined} value */
proto.version.SearchReply.prototype.setHeads = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.version.SearchReply.oneofGroups_[0], value);
};


proto.version.SearchReply.prototype.clearHeads = function() {
  this.setHeads(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.version.SearchReply.prototype.hasHeads = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.version.SearchReply.Error}
 */
proto.version.SearchReply.prototype.getError = function() {
  return /** @type{?proto.version.SearchReply.Error} */ (
    jspb.Message.getWrapperField(this, proto.version.SearchReply.Error, 2));
};


/** @param {?proto.version.SearchReply.Error|undefined} value */
proto.version.SearchReply.prototype.setError = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.version.SearchReply.oneofGroups_[0], value);
};


proto.version.SearchReply.prototype.clearError = function() {
  this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.version.SearchReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.version.SearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.version.SearchRequest.repeatedFields_, null);
};
goog.inherits(proto.version.SearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.version.SearchRequest.displayName = 'proto.version.SearchRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.version.SearchRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.version.SearchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.version.SearchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.version.SearchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.SearchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ownerId: (f = msg.getOwnerId()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    pattern: (f = msg.getPattern()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    tagsList: jspb.Message.getRepeatedField(msg, 3),
    offset: jspb.Message.getFieldWithDefault(msg, 4, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.version.SearchRequest}
 */
proto.version.SearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.version.SearchRequest;
  return proto.version.SearchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.version.SearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.version.SearchRequest}
 */
proto.version.SearchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setOwnerId(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setPattern(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOffset(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.version.SearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.version.SearchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.version.SearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.SearchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOwnerId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getPattern();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional google.protobuf.StringValue owner_id = 1;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.version.SearchRequest.prototype.getOwnerId = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 1));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.version.SearchRequest.prototype.setOwnerId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.version.SearchRequest.prototype.clearOwnerId = function() {
  this.setOwnerId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.version.SearchRequest.prototype.hasOwnerId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.StringValue pattern = 2;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.version.SearchRequest.prototype.getPattern = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 2));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.version.SearchRequest.prototype.setPattern = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.version.SearchRequest.prototype.clearPattern = function() {
  this.setPattern(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.version.SearchRequest.prototype.hasPattern = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string tags = 3;
 * @return {!Array.<string>}
 */
proto.version.SearchRequest.prototype.getTagsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array.<string>} value */
proto.version.SearchRequest.prototype.setTagsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.version.SearchRequest.prototype.addTags = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.version.SearchRequest.prototype.clearTagsList = function() {
  this.setTagsList([]);
};


/**
 * optional uint32 offset = 4;
 * @return {number}
 */
proto.version.SearchRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.version.SearchRequest.prototype.setOffset = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 limit = 5;
 * @return {number}
 */
proto.version.SearchRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.version.SearchRequest.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.version.GetCommitReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.version.GetCommitReply.oneofGroups_);
};
goog.inherits(proto.version.GetCommitReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.version.GetCommitReply.displayName = 'proto.version.GetCommitReply';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.version.GetCommitReply.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.version.GetCommitReply.ResultCase = {
  RESULT_NOT_SET: 0,
  COMMIT: 1,
  ERROR: 2
};

/**
 * @return {proto.version.GetCommitReply.ResultCase}
 */
proto.version.GetCommitReply.prototype.getResultCase = function() {
  return /** @type {proto.version.GetCommitReply.ResultCase} */(jspb.Message.computeOneofCase(this, proto.version.GetCommitReply.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.version.GetCommitReply.prototype.toObject = function(opt_includeInstance) {
  return proto.version.GetCommitReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.version.GetCommitReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.GetCommitReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    commit: (f = msg.getCommit()) && domain_pb.Commit.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.version.GetCommitReply.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.version.GetCommitReply}
 */
proto.version.GetCommitReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.version.GetCommitReply;
  return proto.version.GetCommitReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.version.GetCommitReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.version.GetCommitReply}
 */
proto.version.GetCommitReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new domain_pb.Commit;
      reader.readMessage(value,domain_pb.Commit.deserializeBinaryFromReader);
      msg.setCommit(value);
      break;
    case 2:
      var value = new proto.version.GetCommitReply.Error;
      reader.readMessage(value,proto.version.GetCommitReply.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.version.GetCommitReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.version.GetCommitReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.version.GetCommitReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.GetCommitReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommit();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      domain_pb.Commit.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.version.GetCommitReply.Error.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.version.GetCommitReply.Error = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.version.GetCommitReply.Error, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.version.GetCommitReply.Error.displayName = 'proto.version.GetCommitReply.Error';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.version.GetCommitReply.Error.prototype.toObject = function(opt_includeInstance) {
  return proto.version.GetCommitReply.Error.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.version.GetCommitReply.Error} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.GetCommitReply.Error.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.version.GetCommitReply.Error}
 */
proto.version.GetCommitReply.Error.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.version.GetCommitReply.Error;
  return proto.version.GetCommitReply.Error.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.version.GetCommitReply.Error} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.version.GetCommitReply.Error}
 */
proto.version.GetCommitReply.Error.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = /** @type {!proto.version.GetCommitReply.Error.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.version.GetCommitReply.Error.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.version.GetCommitReply.Error.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.version.GetCommitReply.Error} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.GetCommitReply.Error.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.version.GetCommitReply.Error.Status = {
  UNKNOWN: 0,
  NO_ACCESS: 1
};

/**
 * optional string description = 1;
 * @return {string}
 */
proto.version.GetCommitReply.Error.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.version.GetCommitReply.Error.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.version.GetCommitReply.Error.Status}
 */
proto.version.GetCommitReply.Error.prototype.getStatus = function() {
  return /** @type {!proto.version.GetCommitReply.Error.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.version.GetCommitReply.Error.Status} value */
proto.version.GetCommitReply.Error.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional domain.Commit commit = 1;
 * @return {?proto.domain.Commit}
 */
proto.version.GetCommitReply.prototype.getCommit = function() {
  return /** @type{?proto.domain.Commit} */ (
    jspb.Message.getWrapperField(this, domain_pb.Commit, 1));
};


/** @param {?proto.domain.Commit|undefined} value */
proto.version.GetCommitReply.prototype.setCommit = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.version.GetCommitReply.oneofGroups_[0], value);
};


proto.version.GetCommitReply.prototype.clearCommit = function() {
  this.setCommit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.version.GetCommitReply.prototype.hasCommit = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.version.GetCommitReply.Error}
 */
proto.version.GetCommitReply.prototype.getError = function() {
  return /** @type{?proto.version.GetCommitReply.Error} */ (
    jspb.Message.getWrapperField(this, proto.version.GetCommitReply.Error, 2));
};


/** @param {?proto.version.GetCommitReply.Error|undefined} value */
proto.version.GetCommitReply.prototype.setError = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.version.GetCommitReply.oneofGroups_[0], value);
};


proto.version.GetCommitReply.prototype.clearError = function() {
  this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.version.GetCommitReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.version.GetCommitRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.version.GetCommitRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.version.GetCommitRequest.displayName = 'proto.version.GetCommitRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.version.GetCommitRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.version.GetCommitRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.version.GetCommitRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.GetCommitRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    commitId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.version.GetCommitRequest}
 */
proto.version.GetCommitRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.version.GetCommitRequest;
  return proto.version.GetCommitRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.version.GetCommitRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.version.GetCommitRequest}
 */
proto.version.GetCommitRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommitId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.version.GetCommitRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.version.GetCommitRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.version.GetCommitRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.GetCommitRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommitId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string commit_id = 1;
 * @return {string}
 */
proto.version.GetCommitRequest.prototype.getCommitId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.version.GetCommitRequest.prototype.setCommitId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.version.GetHeadsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.version.GetHeadsReply.repeatedFields_, null);
};
goog.inherits(proto.version.GetHeadsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.version.GetHeadsReply.displayName = 'proto.version.GetHeadsReply';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.version.GetHeadsReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.version.GetHeadsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.version.GetHeadsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.version.GetHeadsReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.GetHeadsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
    proto.version.GetHeadsReply.Entry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.version.GetHeadsReply}
 */
proto.version.GetHeadsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.version.GetHeadsReply;
  return proto.version.GetHeadsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.version.GetHeadsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.version.GetHeadsReply}
 */
proto.version.GetHeadsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.version.GetHeadsReply.Entry;
      reader.readMessage(value,proto.version.GetHeadsReply.Entry.deserializeBinaryFromReader);
      msg.addEntries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.version.GetHeadsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.version.GetHeadsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.version.GetHeadsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.GetHeadsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.version.GetHeadsReply.Entry.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.version.GetHeadsReply.Status = {
  OK: 0,
  UNKNOWN: 1,
  NO_ACCESS: 2
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.version.GetHeadsReply.Entry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.version.GetHeadsReply.Entry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.version.GetHeadsReply.Entry.displayName = 'proto.version.GetHeadsReply.Entry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.version.GetHeadsReply.Entry.prototype.toObject = function(opt_includeInstance) {
  return proto.version.GetHeadsReply.Entry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.version.GetHeadsReply.Entry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.GetHeadsReply.Entry.toObject = function(includeInstance, msg) {
  var f, obj = {
    headId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    head: (f = msg.getHead()) && domain_pb.Head.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.version.GetHeadsReply.Entry}
 */
proto.version.GetHeadsReply.Entry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.version.GetHeadsReply.Entry;
  return proto.version.GetHeadsReply.Entry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.version.GetHeadsReply.Entry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.version.GetHeadsReply.Entry}
 */
proto.version.GetHeadsReply.Entry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeadId(value);
      break;
    case 2:
      var value = /** @type {!proto.version.GetHeadsReply.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = new domain_pb.Head;
      reader.readMessage(value,domain_pb.Head.deserializeBinaryFromReader);
      msg.setHead(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.version.GetHeadsReply.Entry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.version.GetHeadsReply.Entry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.version.GetHeadsReply.Entry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.GetHeadsReply.Entry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeadId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getHead();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      domain_pb.Head.serializeBinaryToWriter
    );
  }
};


/**
 * optional string head_id = 1;
 * @return {string}
 */
proto.version.GetHeadsReply.Entry.prototype.getHeadId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.version.GetHeadsReply.Entry.prototype.setHeadId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.version.GetHeadsReply.Status}
 */
proto.version.GetHeadsReply.Entry.prototype.getStatus = function() {
  return /** @type {!proto.version.GetHeadsReply.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.version.GetHeadsReply.Status} value */
proto.version.GetHeadsReply.Entry.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional domain.Head head = 3;
 * @return {?proto.domain.Head}
 */
proto.version.GetHeadsReply.Entry.prototype.getHead = function() {
  return /** @type{?proto.domain.Head} */ (
    jspb.Message.getWrapperField(this, domain_pb.Head, 3));
};


/** @param {?proto.domain.Head|undefined} value */
proto.version.GetHeadsReply.Entry.prototype.setHead = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.version.GetHeadsReply.Entry.prototype.clearHead = function() {
  this.setHead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.version.GetHeadsReply.Entry.prototype.hasHead = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Entry entries = 1;
 * @return {!Array.<!proto.version.GetHeadsReply.Entry>}
 */
proto.version.GetHeadsReply.prototype.getEntriesList = function() {
  return /** @type{!Array.<!proto.version.GetHeadsReply.Entry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.version.GetHeadsReply.Entry, 1));
};


/** @param {!Array.<!proto.version.GetHeadsReply.Entry>} value */
proto.version.GetHeadsReply.prototype.setEntriesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.version.GetHeadsReply.Entry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.version.GetHeadsReply.Entry}
 */
proto.version.GetHeadsReply.prototype.addEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.version.GetHeadsReply.Entry, opt_index);
};


proto.version.GetHeadsReply.prototype.clearEntriesList = function() {
  this.setEntriesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.version.GetHeadsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.version.GetHeadsRequest.repeatedFields_, null);
};
goog.inherits(proto.version.GetHeadsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.version.GetHeadsRequest.displayName = 'proto.version.GetHeadsRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.version.GetHeadsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.version.GetHeadsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.version.GetHeadsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.version.GetHeadsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.GetHeadsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    headIdsList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.version.GetHeadsRequest}
 */
proto.version.GetHeadsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.version.GetHeadsRequest;
  return proto.version.GetHeadsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.version.GetHeadsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.version.GetHeadsRequest}
 */
proto.version.GetHeadsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addHeadIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.version.GetHeadsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.version.GetHeadsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.version.GetHeadsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.version.GetHeadsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeadIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string head_ids = 1;
 * @return {!Array.<string>}
 */
proto.version.GetHeadsRequest.prototype.getHeadIdsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<string>} value */
proto.version.GetHeadsRequest.prototype.setHeadIdsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.version.GetHeadsRequest.prototype.addHeadIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.version.GetHeadsRequest.prototype.clearHeadIdsList = function() {
  this.setHeadIdsList([]);
};


goog.object.extend(exports, proto.version);
