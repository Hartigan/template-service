/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var domain_pb = require('./domain_pb.js');
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.exportSymbol('proto.groups.AddMembersReply', null, global);
goog.exportSymbol('proto.groups.AddMembersReply.Status', null, global);
goog.exportSymbol('proto.groups.AddMembersReply.UserEntry', null, global);
goog.exportSymbol('proto.groups.AddMembersRequest', null, global);
goog.exportSymbol('proto.groups.CreateGroupReply', null, global);
goog.exportSymbol('proto.groups.CreateGroupReply.Error', null, global);
goog.exportSymbol('proto.groups.CreateGroupReply.Error.Status', null, global);
goog.exportSymbol('proto.groups.CreateGroupRequest', null, global);
goog.exportSymbol('proto.groups.GetGroupReply', null, global);
goog.exportSymbol('proto.groups.GetGroupReply.Error', null, global);
goog.exportSymbol('proto.groups.GetGroupReply.Error.Status', null, global);
goog.exportSymbol('proto.groups.GetGroupRequest', null, global);
goog.exportSymbol('proto.groups.GetGroupsReply', null, global);
goog.exportSymbol('proto.groups.GetGroupsReply.Error', null, global);
goog.exportSymbol('proto.groups.GetGroupsReply.Error.Status', null, global);
goog.exportSymbol('proto.groups.GetGroupsReply.GroupList', null, global);
goog.exportSymbol('proto.groups.GetGroupsRequest', null, global);
goog.exportSymbol('proto.groups.RemoveMembersReply', null, global);
goog.exportSymbol('proto.groups.RemoveMembersReply.Status', null, global);
goog.exportSymbol('proto.groups.RemoveMembersReply.UserEntry', null, global);
goog.exportSymbol('proto.groups.RemoveMembersRequest', null, global);
goog.exportSymbol('proto.groups.SearchReply', null, global);
goog.exportSymbol('proto.groups.SearchReply.Error', null, global);
goog.exportSymbol('proto.groups.SearchReply.Error.Status', null, global);
goog.exportSymbol('proto.groups.SearchReply.GroupList', null, global);
goog.exportSymbol('proto.groups.SearchRequest', null, global);
goog.exportSymbol('proto.groups.UpdateGroupReply', null, global);
goog.exportSymbol('proto.groups.UpdateGroupReply.Error', null, global);
goog.exportSymbol('proto.groups.UpdateGroupReply.Error.Status', null, global);
goog.exportSymbol('proto.groups.UpdateGroupRequest', null, global);
goog.exportSymbol('proto.groups.UpdateMemberReply', null, global);
goog.exportSymbol('proto.groups.UpdateMemberReply.Error', null, global);
goog.exportSymbol('proto.groups.UpdateMemberReply.Error.Status', null, global);
goog.exportSymbol('proto.groups.UpdateMemberRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.SearchReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.groups.SearchReply.oneofGroups_);
};
goog.inherits(proto.groups.SearchReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.SearchReply.displayName = 'proto.groups.SearchReply';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.groups.SearchReply.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.groups.SearchReply.ResultCase = {
  RESULT_NOT_SET: 0,
  GROUPS: 1,
  ERROR: 2
};

/**
 * @return {proto.groups.SearchReply.ResultCase}
 */
proto.groups.SearchReply.prototype.getResultCase = function() {
  return /** @type {proto.groups.SearchReply.ResultCase} */(jspb.Message.computeOneofCase(this, proto.groups.SearchReply.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.SearchReply.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.SearchReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.SearchReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.SearchReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    groups: (f = msg.getGroups()) && proto.groups.SearchReply.GroupList.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.groups.SearchReply.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.SearchReply}
 */
proto.groups.SearchReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.SearchReply;
  return proto.groups.SearchReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.SearchReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.SearchReply}
 */
proto.groups.SearchReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.groups.SearchReply.GroupList;
      reader.readMessage(value,proto.groups.SearchReply.GroupList.deserializeBinaryFromReader);
      msg.setGroups(value);
      break;
    case 2:
      var value = new proto.groups.SearchReply.Error;
      reader.readMessage(value,proto.groups.SearchReply.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.SearchReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.SearchReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.SearchReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.SearchReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroups();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.groups.SearchReply.GroupList.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.groups.SearchReply.Error.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.SearchReply.GroupList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.groups.SearchReply.GroupList.repeatedFields_, null);
};
goog.inherits(proto.groups.SearchReply.GroupList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.SearchReply.GroupList.displayName = 'proto.groups.SearchReply.GroupList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.groups.SearchReply.GroupList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.SearchReply.GroupList.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.SearchReply.GroupList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.SearchReply.GroupList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.SearchReply.GroupList.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    domain_pb.Group.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.SearchReply.GroupList}
 */
proto.groups.SearchReply.GroupList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.SearchReply.GroupList;
  return proto.groups.SearchReply.GroupList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.SearchReply.GroupList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.SearchReply.GroupList}
 */
proto.groups.SearchReply.GroupList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new domain_pb.Group;
      reader.readMessage(value,domain_pb.Group.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.SearchReply.GroupList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.SearchReply.GroupList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.SearchReply.GroupList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.SearchReply.GroupList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      domain_pb.Group.serializeBinaryToWriter
    );
  }
};


/**
 * repeated domain.Group groups = 1;
 * @return {!Array.<!proto.domain.Group>}
 */
proto.groups.SearchReply.GroupList.prototype.getGroupsList = function() {
  return /** @type{!Array.<!proto.domain.Group>} */ (
    jspb.Message.getRepeatedWrapperField(this, domain_pb.Group, 1));
};


/** @param {!Array.<!proto.domain.Group>} value */
proto.groups.SearchReply.GroupList.prototype.setGroupsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.domain.Group=} opt_value
 * @param {number=} opt_index
 * @return {!proto.domain.Group}
 */
proto.groups.SearchReply.GroupList.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.domain.Group, opt_index);
};


proto.groups.SearchReply.GroupList.prototype.clearGroupsList = function() {
  this.setGroupsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.SearchReply.Error = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.groups.SearchReply.Error, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.SearchReply.Error.displayName = 'proto.groups.SearchReply.Error';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.SearchReply.Error.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.SearchReply.Error.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.SearchReply.Error} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.SearchReply.Error.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.SearchReply.Error}
 */
proto.groups.SearchReply.Error.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.SearchReply.Error;
  return proto.groups.SearchReply.Error.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.SearchReply.Error} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.SearchReply.Error}
 */
proto.groups.SearchReply.Error.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = /** @type {!proto.groups.SearchReply.Error.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.SearchReply.Error.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.SearchReply.Error.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.SearchReply.Error} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.SearchReply.Error.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.groups.SearchReply.Error.Status = {
  UNKNOWN: 0,
  NO_ACCESS: 1
};

/**
 * optional string description = 1;
 * @return {string}
 */
proto.groups.SearchReply.Error.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.groups.SearchReply.Error.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.groups.SearchReply.Error.Status}
 */
proto.groups.SearchReply.Error.prototype.getStatus = function() {
  return /** @type {!proto.groups.SearchReply.Error.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.groups.SearchReply.Error.Status} value */
proto.groups.SearchReply.Error.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional GroupList groups = 1;
 * @return {?proto.groups.SearchReply.GroupList}
 */
proto.groups.SearchReply.prototype.getGroups = function() {
  return /** @type{?proto.groups.SearchReply.GroupList} */ (
    jspb.Message.getWrapperField(this, proto.groups.SearchReply.GroupList, 1));
};


/** @param {?proto.groups.SearchReply.GroupList|undefined} value */
proto.groups.SearchReply.prototype.setGroups = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.groups.SearchReply.oneofGroups_[0], value);
};


proto.groups.SearchReply.prototype.clearGroups = function() {
  this.setGroups(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.groups.SearchReply.prototype.hasGroups = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.groups.SearchReply.Error}
 */
proto.groups.SearchReply.prototype.getError = function() {
  return /** @type{?proto.groups.SearchReply.Error} */ (
    jspb.Message.getWrapperField(this, proto.groups.SearchReply.Error, 2));
};


/** @param {?proto.groups.SearchReply.Error|undefined} value */
proto.groups.SearchReply.prototype.setError = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.groups.SearchReply.oneofGroups_[0], value);
};


proto.groups.SearchReply.prototype.clearError = function() {
  this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.groups.SearchReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.SearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.groups.SearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.SearchRequest.displayName = 'proto.groups.SearchRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.SearchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.SearchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.SearchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.SearchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pattern: (f = msg.getPattern()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.SearchRequest}
 */
proto.groups.SearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.SearchRequest;
  return proto.groups.SearchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.SearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.SearchRequest}
 */
proto.groups.SearchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setPattern(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.SearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.SearchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.SearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.SearchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPattern();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional google.protobuf.StringValue pattern = 1;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.groups.SearchRequest.prototype.getPattern = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 1));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.groups.SearchRequest.prototype.setPattern = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.groups.SearchRequest.prototype.clearPattern = function() {
  this.setPattern(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.groups.SearchRequest.prototype.hasPattern = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 offset = 2;
 * @return {number}
 */
proto.groups.SearchRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.groups.SearchRequest.prototype.setOffset = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 limit = 3;
 * @return {number}
 */
proto.groups.SearchRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.groups.SearchRequest.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.AddMembersReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.groups.AddMembersReply.repeatedFields_, null);
};
goog.inherits(proto.groups.AddMembersReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.AddMembersReply.displayName = 'proto.groups.AddMembersReply';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.groups.AddMembersReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.AddMembersReply.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.AddMembersReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.AddMembersReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.AddMembersReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.groups.AddMembersReply.UserEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.AddMembersReply}
 */
proto.groups.AddMembersReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.AddMembersReply;
  return proto.groups.AddMembersReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.AddMembersReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.AddMembersReply}
 */
proto.groups.AddMembersReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.groups.AddMembersReply.UserEntry;
      reader.readMessage(value,proto.groups.AddMembersReply.UserEntry.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.AddMembersReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.AddMembersReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.AddMembersReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.AddMembersReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.groups.AddMembersReply.UserEntry.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.groups.AddMembersReply.Status = {
  OK: 0,
  UNKNOWN: 1,
  NO_ACCESS: 2
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.AddMembersReply.UserEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.groups.AddMembersReply.UserEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.AddMembersReply.UserEntry.displayName = 'proto.groups.AddMembersReply.UserEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.AddMembersReply.UserEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.AddMembersReply.UserEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.AddMembersReply.UserEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.AddMembersReply.UserEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.AddMembersReply.UserEntry}
 */
proto.groups.AddMembersReply.UserEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.AddMembersReply.UserEntry;
  return proto.groups.AddMembersReply.UserEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.AddMembersReply.UserEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.AddMembersReply.UserEntry}
 */
proto.groups.AddMembersReply.UserEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {!proto.groups.AddMembersReply.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.AddMembersReply.UserEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.AddMembersReply.UserEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.AddMembersReply.UserEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.AddMembersReply.UserEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.groups.AddMembersReply.UserEntry.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.groups.AddMembersReply.UserEntry.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.groups.AddMembersReply.Status}
 */
proto.groups.AddMembersReply.UserEntry.prototype.getStatus = function() {
  return /** @type {!proto.groups.AddMembersReply.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.groups.AddMembersReply.Status} value */
proto.groups.AddMembersReply.UserEntry.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated UserEntry users = 1;
 * @return {!Array.<!proto.groups.AddMembersReply.UserEntry>}
 */
proto.groups.AddMembersReply.prototype.getUsersList = function() {
  return /** @type{!Array.<!proto.groups.AddMembersReply.UserEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.groups.AddMembersReply.UserEntry, 1));
};


/** @param {!Array.<!proto.groups.AddMembersReply.UserEntry>} value */
proto.groups.AddMembersReply.prototype.setUsersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.groups.AddMembersReply.UserEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.groups.AddMembersReply.UserEntry}
 */
proto.groups.AddMembersReply.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.groups.AddMembersReply.UserEntry, opt_index);
};


proto.groups.AddMembersReply.prototype.clearUsersList = function() {
  this.setUsersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.AddMembersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.groups.AddMembersRequest.repeatedFields_, null);
};
goog.inherits(proto.groups.AddMembersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.AddMembersRequest.displayName = 'proto.groups.AddMembersRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.groups.AddMembersRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.AddMembersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.AddMembersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.AddMembersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.AddMembersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    usersList: jspb.Message.getRepeatedField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.AddMembersRequest}
 */
proto.groups.AddMembersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.AddMembersRequest;
  return proto.groups.AddMembersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.AddMembersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.AddMembersRequest}
 */
proto.groups.AddMembersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addUsers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.AddMembersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.AddMembersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.AddMembersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.AddMembersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string group_id = 1;
 * @return {string}
 */
proto.groups.AddMembersRequest.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.groups.AddMembersRequest.prototype.setGroupId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string users = 2;
 * @return {!Array.<string>}
 */
proto.groups.AddMembersRequest.prototype.getUsersList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array.<string>} value */
proto.groups.AddMembersRequest.prototype.setUsersList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.groups.AddMembersRequest.prototype.addUsers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.groups.AddMembersRequest.prototype.clearUsersList = function() {
  this.setUsersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.RemoveMembersReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.groups.RemoveMembersReply.repeatedFields_, null);
};
goog.inherits(proto.groups.RemoveMembersReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.RemoveMembersReply.displayName = 'proto.groups.RemoveMembersReply';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.groups.RemoveMembersReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.RemoveMembersReply.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.RemoveMembersReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.RemoveMembersReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.RemoveMembersReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.groups.RemoveMembersReply.UserEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.RemoveMembersReply}
 */
proto.groups.RemoveMembersReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.RemoveMembersReply;
  return proto.groups.RemoveMembersReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.RemoveMembersReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.RemoveMembersReply}
 */
proto.groups.RemoveMembersReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.groups.RemoveMembersReply.UserEntry;
      reader.readMessage(value,proto.groups.RemoveMembersReply.UserEntry.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.RemoveMembersReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.RemoveMembersReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.RemoveMembersReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.RemoveMembersReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.groups.RemoveMembersReply.UserEntry.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.groups.RemoveMembersReply.Status = {
  OK: 0,
  UNKNOWN: 1,
  NO_ACCESS: 2
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.RemoveMembersReply.UserEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.groups.RemoveMembersReply.UserEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.RemoveMembersReply.UserEntry.displayName = 'proto.groups.RemoveMembersReply.UserEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.RemoveMembersReply.UserEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.RemoveMembersReply.UserEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.RemoveMembersReply.UserEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.RemoveMembersReply.UserEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.RemoveMembersReply.UserEntry}
 */
proto.groups.RemoveMembersReply.UserEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.RemoveMembersReply.UserEntry;
  return proto.groups.RemoveMembersReply.UserEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.RemoveMembersReply.UserEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.RemoveMembersReply.UserEntry}
 */
proto.groups.RemoveMembersReply.UserEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {!proto.groups.RemoveMembersReply.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.RemoveMembersReply.UserEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.RemoveMembersReply.UserEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.RemoveMembersReply.UserEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.RemoveMembersReply.UserEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.groups.RemoveMembersReply.UserEntry.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.groups.RemoveMembersReply.UserEntry.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.groups.RemoveMembersReply.Status}
 */
proto.groups.RemoveMembersReply.UserEntry.prototype.getStatus = function() {
  return /** @type {!proto.groups.RemoveMembersReply.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.groups.RemoveMembersReply.Status} value */
proto.groups.RemoveMembersReply.UserEntry.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated UserEntry users = 1;
 * @return {!Array.<!proto.groups.RemoveMembersReply.UserEntry>}
 */
proto.groups.RemoveMembersReply.prototype.getUsersList = function() {
  return /** @type{!Array.<!proto.groups.RemoveMembersReply.UserEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.groups.RemoveMembersReply.UserEntry, 1));
};


/** @param {!Array.<!proto.groups.RemoveMembersReply.UserEntry>} value */
proto.groups.RemoveMembersReply.prototype.setUsersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.groups.RemoveMembersReply.UserEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.groups.RemoveMembersReply.UserEntry}
 */
proto.groups.RemoveMembersReply.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.groups.RemoveMembersReply.UserEntry, opt_index);
};


proto.groups.RemoveMembersReply.prototype.clearUsersList = function() {
  this.setUsersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.RemoveMembersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.groups.RemoveMembersRequest.repeatedFields_, null);
};
goog.inherits(proto.groups.RemoveMembersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.RemoveMembersRequest.displayName = 'proto.groups.RemoveMembersRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.groups.RemoveMembersRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.RemoveMembersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.RemoveMembersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.RemoveMembersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.RemoveMembersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    usersList: jspb.Message.getRepeatedField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.RemoveMembersRequest}
 */
proto.groups.RemoveMembersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.RemoveMembersRequest;
  return proto.groups.RemoveMembersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.RemoveMembersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.RemoveMembersRequest}
 */
proto.groups.RemoveMembersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addUsers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.RemoveMembersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.RemoveMembersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.RemoveMembersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.RemoveMembersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string group_id = 1;
 * @return {string}
 */
proto.groups.RemoveMembersRequest.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.groups.RemoveMembersRequest.prototype.setGroupId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string users = 2;
 * @return {!Array.<string>}
 */
proto.groups.RemoveMembersRequest.prototype.getUsersList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array.<string>} value */
proto.groups.RemoveMembersRequest.prototype.setUsersList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.groups.RemoveMembersRequest.prototype.addUsers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.groups.RemoveMembersRequest.prototype.clearUsersList = function() {
  this.setUsersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.UpdateMemberReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.groups.UpdateMemberReply.oneofGroups_);
};
goog.inherits(proto.groups.UpdateMemberReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.UpdateMemberReply.displayName = 'proto.groups.UpdateMemberReply';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.groups.UpdateMemberReply.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.groups.UpdateMemberReply.ResultCase = {
  RESULT_NOT_SET: 0,
  ERROR: 1
};

/**
 * @return {proto.groups.UpdateMemberReply.ResultCase}
 */
proto.groups.UpdateMemberReply.prototype.getResultCase = function() {
  return /** @type {proto.groups.UpdateMemberReply.ResultCase} */(jspb.Message.computeOneofCase(this, proto.groups.UpdateMemberReply.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.UpdateMemberReply.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.UpdateMemberReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.UpdateMemberReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.UpdateMemberReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: (f = msg.getError()) && proto.groups.UpdateMemberReply.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.UpdateMemberReply}
 */
proto.groups.UpdateMemberReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.UpdateMemberReply;
  return proto.groups.UpdateMemberReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.UpdateMemberReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.UpdateMemberReply}
 */
proto.groups.UpdateMemberReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.groups.UpdateMemberReply.Error;
      reader.readMessage(value,proto.groups.UpdateMemberReply.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.UpdateMemberReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.UpdateMemberReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.UpdateMemberReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.UpdateMemberReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.groups.UpdateMemberReply.Error.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.UpdateMemberReply.Error = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.groups.UpdateMemberReply.Error, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.UpdateMemberReply.Error.displayName = 'proto.groups.UpdateMemberReply.Error';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.UpdateMemberReply.Error.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.UpdateMemberReply.Error.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.UpdateMemberReply.Error} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.UpdateMemberReply.Error.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.UpdateMemberReply.Error}
 */
proto.groups.UpdateMemberReply.Error.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.UpdateMemberReply.Error;
  return proto.groups.UpdateMemberReply.Error.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.UpdateMemberReply.Error} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.UpdateMemberReply.Error}
 */
proto.groups.UpdateMemberReply.Error.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = /** @type {!proto.groups.UpdateMemberReply.Error.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.UpdateMemberReply.Error.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.UpdateMemberReply.Error.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.UpdateMemberReply.Error} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.UpdateMemberReply.Error.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.groups.UpdateMemberReply.Error.Status = {
  UNKNOWN: 0,
  NO_ACCESS: 1,
  NOT_FOUND: 2
};

/**
 * optional string description = 1;
 * @return {string}
 */
proto.groups.UpdateMemberReply.Error.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.groups.UpdateMemberReply.Error.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.groups.UpdateMemberReply.Error.Status}
 */
proto.groups.UpdateMemberReply.Error.prototype.getStatus = function() {
  return /** @type {!proto.groups.UpdateMemberReply.Error.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.groups.UpdateMemberReply.Error.Status} value */
proto.groups.UpdateMemberReply.Error.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Error error = 1;
 * @return {?proto.groups.UpdateMemberReply.Error}
 */
proto.groups.UpdateMemberReply.prototype.getError = function() {
  return /** @type{?proto.groups.UpdateMemberReply.Error} */ (
    jspb.Message.getWrapperField(this, proto.groups.UpdateMemberReply.Error, 1));
};


/** @param {?proto.groups.UpdateMemberReply.Error|undefined} value */
proto.groups.UpdateMemberReply.prototype.setError = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.groups.UpdateMemberReply.oneofGroups_[0], value);
};


proto.groups.UpdateMemberReply.prototype.clearError = function() {
  this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.groups.UpdateMemberReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.UpdateMemberRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.groups.UpdateMemberRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.UpdateMemberRequest.displayName = 'proto.groups.UpdateMemberRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.UpdateMemberRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.UpdateMemberRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.UpdateMemberRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.UpdateMemberRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    access: (f = msg.getAccess()) && domain_pb.Access.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.UpdateMemberRequest}
 */
proto.groups.UpdateMemberRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.UpdateMemberRequest;
  return proto.groups.UpdateMemberRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.UpdateMemberRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.UpdateMemberRequest}
 */
proto.groups.UpdateMemberRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = new domain_pb.Access;
      reader.readMessage(value,domain_pb.Access.deserializeBinaryFromReader);
      msg.setAccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.UpdateMemberRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.UpdateMemberRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.UpdateMemberRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.UpdateMemberRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAccess();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      domain_pb.Access.serializeBinaryToWriter
    );
  }
};


/**
 * optional string group_id = 1;
 * @return {string}
 */
proto.groups.UpdateMemberRequest.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.groups.UpdateMemberRequest.prototype.setGroupId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.groups.UpdateMemberRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.groups.UpdateMemberRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional domain.Access access = 3;
 * @return {?proto.domain.Access}
 */
proto.groups.UpdateMemberRequest.prototype.getAccess = function() {
  return /** @type{?proto.domain.Access} */ (
    jspb.Message.getWrapperField(this, domain_pb.Access, 3));
};


/** @param {?proto.domain.Access|undefined} value */
proto.groups.UpdateMemberRequest.prototype.setAccess = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.groups.UpdateMemberRequest.prototype.clearAccess = function() {
  this.setAccess(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.groups.UpdateMemberRequest.prototype.hasAccess = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.UpdateGroupReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.groups.UpdateGroupReply.oneofGroups_);
};
goog.inherits(proto.groups.UpdateGroupReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.UpdateGroupReply.displayName = 'proto.groups.UpdateGroupReply';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.groups.UpdateGroupReply.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.groups.UpdateGroupReply.ResultCase = {
  RESULT_NOT_SET: 0,
  OK: 1,
  ERROR: 2
};

/**
 * @return {proto.groups.UpdateGroupReply.ResultCase}
 */
proto.groups.UpdateGroupReply.prototype.getResultCase = function() {
  return /** @type {proto.groups.UpdateGroupReply.ResultCase} */(jspb.Message.computeOneofCase(this, proto.groups.UpdateGroupReply.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.UpdateGroupReply.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.UpdateGroupReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.UpdateGroupReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.UpdateGroupReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    ok: (f = msg.getOk()) && google_protobuf_empty_pb.Empty.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.groups.UpdateGroupReply.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.UpdateGroupReply}
 */
proto.groups.UpdateGroupReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.UpdateGroupReply;
  return proto.groups.UpdateGroupReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.UpdateGroupReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.UpdateGroupReply}
 */
proto.groups.UpdateGroupReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_empty_pb.Empty;
      reader.readMessage(value,google_protobuf_empty_pb.Empty.deserializeBinaryFromReader);
      msg.setOk(value);
      break;
    case 2:
      var value = new proto.groups.UpdateGroupReply.Error;
      reader.readMessage(value,proto.groups.UpdateGroupReply.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.UpdateGroupReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.UpdateGroupReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.UpdateGroupReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.UpdateGroupReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOk();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_empty_pb.Empty.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.groups.UpdateGroupReply.Error.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.UpdateGroupReply.Error = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.groups.UpdateGroupReply.Error, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.UpdateGroupReply.Error.displayName = 'proto.groups.UpdateGroupReply.Error';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.UpdateGroupReply.Error.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.UpdateGroupReply.Error.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.UpdateGroupReply.Error} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.UpdateGroupReply.Error.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.UpdateGroupReply.Error}
 */
proto.groups.UpdateGroupReply.Error.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.UpdateGroupReply.Error;
  return proto.groups.UpdateGroupReply.Error.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.UpdateGroupReply.Error} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.UpdateGroupReply.Error}
 */
proto.groups.UpdateGroupReply.Error.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = /** @type {!proto.groups.UpdateGroupReply.Error.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.UpdateGroupReply.Error.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.UpdateGroupReply.Error.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.UpdateGroupReply.Error} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.UpdateGroupReply.Error.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.groups.UpdateGroupReply.Error.Status = {
  UNKNOWN: 0,
  NO_ACCESS: 1
};

/**
 * optional string description = 1;
 * @return {string}
 */
proto.groups.UpdateGroupReply.Error.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.groups.UpdateGroupReply.Error.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.groups.UpdateGroupReply.Error.Status}
 */
proto.groups.UpdateGroupReply.Error.prototype.getStatus = function() {
  return /** @type {!proto.groups.UpdateGroupReply.Error.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.groups.UpdateGroupReply.Error.Status} value */
proto.groups.UpdateGroupReply.Error.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional google.protobuf.Empty ok = 1;
 * @return {?proto.google.protobuf.Empty}
 */
proto.groups.UpdateGroupReply.prototype.getOk = function() {
  return /** @type{?proto.google.protobuf.Empty} */ (
    jspb.Message.getWrapperField(this, google_protobuf_empty_pb.Empty, 1));
};


/** @param {?proto.google.protobuf.Empty|undefined} value */
proto.groups.UpdateGroupReply.prototype.setOk = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.groups.UpdateGroupReply.oneofGroups_[0], value);
};


proto.groups.UpdateGroupReply.prototype.clearOk = function() {
  this.setOk(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.groups.UpdateGroupReply.prototype.hasOk = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.groups.UpdateGroupReply.Error}
 */
proto.groups.UpdateGroupReply.prototype.getError = function() {
  return /** @type{?proto.groups.UpdateGroupReply.Error} */ (
    jspb.Message.getWrapperField(this, proto.groups.UpdateGroupReply.Error, 2));
};


/** @param {?proto.groups.UpdateGroupReply.Error|undefined} value */
proto.groups.UpdateGroupReply.prototype.setError = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.groups.UpdateGroupReply.oneofGroups_[0], value);
};


proto.groups.UpdateGroupReply.prototype.clearError = function() {
  this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.groups.UpdateGroupReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.UpdateGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.groups.UpdateGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.UpdateGroupRequest.displayName = 'proto.groups.UpdateGroupRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.UpdateGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.UpdateGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.UpdateGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.UpdateGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: (f = msg.getName()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    description: (f = msg.getDescription()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.UpdateGroupRequest}
 */
proto.groups.UpdateGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.UpdateGroupRequest;
  return proto.groups.UpdateGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.UpdateGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.UpdateGroupRequest}
 */
proto.groups.UpdateGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.UpdateGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.UpdateGroupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.UpdateGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.UpdateGroupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string group_id = 1;
 * @return {string}
 */
proto.groups.UpdateGroupRequest.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.groups.UpdateGroupRequest.prototype.setGroupId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.StringValue name = 2;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.groups.UpdateGroupRequest.prototype.getName = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 2));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.groups.UpdateGroupRequest.prototype.setName = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.groups.UpdateGroupRequest.prototype.clearName = function() {
  this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.groups.UpdateGroupRequest.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.StringValue description = 3;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.groups.UpdateGroupRequest.prototype.getDescription = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 3));
};


/** @param {?proto.google.protobuf.StringValue|undefined} value */
proto.groups.UpdateGroupRequest.prototype.setDescription = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.groups.UpdateGroupRequest.prototype.clearDescription = function() {
  this.setDescription(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.groups.UpdateGroupRequest.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.GetGroupsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.groups.GetGroupsReply.oneofGroups_);
};
goog.inherits(proto.groups.GetGroupsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.GetGroupsReply.displayName = 'proto.groups.GetGroupsReply';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.groups.GetGroupsReply.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.groups.GetGroupsReply.ResultCase = {
  RESULT_NOT_SET: 0,
  GROUPS: 1,
  ERROR: 2
};

/**
 * @return {proto.groups.GetGroupsReply.ResultCase}
 */
proto.groups.GetGroupsReply.prototype.getResultCase = function() {
  return /** @type {proto.groups.GetGroupsReply.ResultCase} */(jspb.Message.computeOneofCase(this, proto.groups.GetGroupsReply.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.GetGroupsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.GetGroupsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.GetGroupsReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.GetGroupsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    groups: (f = msg.getGroups()) && proto.groups.GetGroupsReply.GroupList.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.groups.GetGroupsReply.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.GetGroupsReply}
 */
proto.groups.GetGroupsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.GetGroupsReply;
  return proto.groups.GetGroupsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.GetGroupsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.GetGroupsReply}
 */
proto.groups.GetGroupsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.groups.GetGroupsReply.GroupList;
      reader.readMessage(value,proto.groups.GetGroupsReply.GroupList.deserializeBinaryFromReader);
      msg.setGroups(value);
      break;
    case 2:
      var value = new proto.groups.GetGroupsReply.Error;
      reader.readMessage(value,proto.groups.GetGroupsReply.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.GetGroupsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.GetGroupsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.GetGroupsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.GetGroupsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroups();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.groups.GetGroupsReply.GroupList.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.groups.GetGroupsReply.Error.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.GetGroupsReply.GroupList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.groups.GetGroupsReply.GroupList.repeatedFields_, null);
};
goog.inherits(proto.groups.GetGroupsReply.GroupList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.GetGroupsReply.GroupList.displayName = 'proto.groups.GetGroupsReply.GroupList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.groups.GetGroupsReply.GroupList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.GetGroupsReply.GroupList.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.GetGroupsReply.GroupList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.GetGroupsReply.GroupList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.GetGroupsReply.GroupList.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    domain_pb.Group.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.GetGroupsReply.GroupList}
 */
proto.groups.GetGroupsReply.GroupList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.GetGroupsReply.GroupList;
  return proto.groups.GetGroupsReply.GroupList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.GetGroupsReply.GroupList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.GetGroupsReply.GroupList}
 */
proto.groups.GetGroupsReply.GroupList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new domain_pb.Group;
      reader.readMessage(value,domain_pb.Group.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.GetGroupsReply.GroupList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.GetGroupsReply.GroupList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.GetGroupsReply.GroupList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.GetGroupsReply.GroupList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      domain_pb.Group.serializeBinaryToWriter
    );
  }
};


/**
 * repeated domain.Group groups = 1;
 * @return {!Array.<!proto.domain.Group>}
 */
proto.groups.GetGroupsReply.GroupList.prototype.getGroupsList = function() {
  return /** @type{!Array.<!proto.domain.Group>} */ (
    jspb.Message.getRepeatedWrapperField(this, domain_pb.Group, 1));
};


/** @param {!Array.<!proto.domain.Group>} value */
proto.groups.GetGroupsReply.GroupList.prototype.setGroupsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.domain.Group=} opt_value
 * @param {number=} opt_index
 * @return {!proto.domain.Group}
 */
proto.groups.GetGroupsReply.GroupList.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.domain.Group, opt_index);
};


proto.groups.GetGroupsReply.GroupList.prototype.clearGroupsList = function() {
  this.setGroupsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.GetGroupsReply.Error = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.groups.GetGroupsReply.Error, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.GetGroupsReply.Error.displayName = 'proto.groups.GetGroupsReply.Error';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.GetGroupsReply.Error.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.GetGroupsReply.Error.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.GetGroupsReply.Error} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.GetGroupsReply.Error.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.GetGroupsReply.Error}
 */
proto.groups.GetGroupsReply.Error.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.GetGroupsReply.Error;
  return proto.groups.GetGroupsReply.Error.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.GetGroupsReply.Error} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.GetGroupsReply.Error}
 */
proto.groups.GetGroupsReply.Error.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = /** @type {!proto.groups.GetGroupsReply.Error.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.GetGroupsReply.Error.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.GetGroupsReply.Error.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.GetGroupsReply.Error} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.GetGroupsReply.Error.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.groups.GetGroupsReply.Error.Status = {
  UNKNOWN: 0,
  NO_ACCESS: 1
};

/**
 * optional string description = 1;
 * @return {string}
 */
proto.groups.GetGroupsReply.Error.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.groups.GetGroupsReply.Error.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.groups.GetGroupsReply.Error.Status}
 */
proto.groups.GetGroupsReply.Error.prototype.getStatus = function() {
  return /** @type {!proto.groups.GetGroupsReply.Error.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.groups.GetGroupsReply.Error.Status} value */
proto.groups.GetGroupsReply.Error.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional GroupList groups = 1;
 * @return {?proto.groups.GetGroupsReply.GroupList}
 */
proto.groups.GetGroupsReply.prototype.getGroups = function() {
  return /** @type{?proto.groups.GetGroupsReply.GroupList} */ (
    jspb.Message.getWrapperField(this, proto.groups.GetGroupsReply.GroupList, 1));
};


/** @param {?proto.groups.GetGroupsReply.GroupList|undefined} value */
proto.groups.GetGroupsReply.prototype.setGroups = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.groups.GetGroupsReply.oneofGroups_[0], value);
};


proto.groups.GetGroupsReply.prototype.clearGroups = function() {
  this.setGroups(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.groups.GetGroupsReply.prototype.hasGroups = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.groups.GetGroupsReply.Error}
 */
proto.groups.GetGroupsReply.prototype.getError = function() {
  return /** @type{?proto.groups.GetGroupsReply.Error} */ (
    jspb.Message.getWrapperField(this, proto.groups.GetGroupsReply.Error, 2));
};


/** @param {?proto.groups.GetGroupsReply.Error|undefined} value */
proto.groups.GetGroupsReply.prototype.setError = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.groups.GetGroupsReply.oneofGroups_[0], value);
};


proto.groups.GetGroupsReply.prototype.clearError = function() {
  this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.groups.GetGroupsReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.GetGroupsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.groups.GetGroupsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.GetGroupsRequest.displayName = 'proto.groups.GetGroupsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.GetGroupsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.GetGroupsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.GetGroupsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.GetGroupsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    generate: jspb.Message.getFieldWithDefault(msg, 1, false),
    read: jspb.Message.getFieldWithDefault(msg, 2, false),
    write: jspb.Message.getFieldWithDefault(msg, 3, false),
    admin: jspb.Message.getFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.GetGroupsRequest}
 */
proto.groups.GetGroupsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.GetGroupsRequest;
  return proto.groups.GetGroupsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.GetGroupsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.GetGroupsRequest}
 */
proto.groups.GetGroupsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGenerate(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRead(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWrite(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAdmin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.GetGroupsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.GetGroupsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.GetGroupsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.GetGroupsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGenerate();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getRead();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getWrite();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getAdmin();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional bool generate = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.groups.GetGroupsRequest.prototype.getGenerate = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.groups.GetGroupsRequest.prototype.setGenerate = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool read = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.groups.GetGroupsRequest.prototype.getRead = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.groups.GetGroupsRequest.prototype.setRead = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool write = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.groups.GetGroupsRequest.prototype.getWrite = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.groups.GetGroupsRequest.prototype.setWrite = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool admin = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.groups.GetGroupsRequest.prototype.getAdmin = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.groups.GetGroupsRequest.prototype.setAdmin = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.GetGroupReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.groups.GetGroupReply.oneofGroups_);
};
goog.inherits(proto.groups.GetGroupReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.GetGroupReply.displayName = 'proto.groups.GetGroupReply';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.groups.GetGroupReply.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.groups.GetGroupReply.ResultCase = {
  RESULT_NOT_SET: 0,
  GROUP: 1,
  ERROR: 2
};

/**
 * @return {proto.groups.GetGroupReply.ResultCase}
 */
proto.groups.GetGroupReply.prototype.getResultCase = function() {
  return /** @type {proto.groups.GetGroupReply.ResultCase} */(jspb.Message.computeOneofCase(this, proto.groups.GetGroupReply.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.GetGroupReply.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.GetGroupReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.GetGroupReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.GetGroupReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    group: (f = msg.getGroup()) && domain_pb.Group.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.groups.GetGroupReply.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.GetGroupReply}
 */
proto.groups.GetGroupReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.GetGroupReply;
  return proto.groups.GetGroupReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.GetGroupReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.GetGroupReply}
 */
proto.groups.GetGroupReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new domain_pb.Group;
      reader.readMessage(value,domain_pb.Group.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    case 2:
      var value = new proto.groups.GetGroupReply.Error;
      reader.readMessage(value,proto.groups.GetGroupReply.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.GetGroupReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.GetGroupReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.GetGroupReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.GetGroupReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      domain_pb.Group.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.groups.GetGroupReply.Error.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.GetGroupReply.Error = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.groups.GetGroupReply.Error, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.GetGroupReply.Error.displayName = 'proto.groups.GetGroupReply.Error';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.GetGroupReply.Error.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.GetGroupReply.Error.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.GetGroupReply.Error} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.GetGroupReply.Error.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.GetGroupReply.Error}
 */
proto.groups.GetGroupReply.Error.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.GetGroupReply.Error;
  return proto.groups.GetGroupReply.Error.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.GetGroupReply.Error} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.GetGroupReply.Error}
 */
proto.groups.GetGroupReply.Error.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = /** @type {!proto.groups.GetGroupReply.Error.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.GetGroupReply.Error.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.GetGroupReply.Error.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.GetGroupReply.Error} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.GetGroupReply.Error.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.groups.GetGroupReply.Error.Status = {
  UNKNOWN: 0,
  NO_ACCESS: 1
};

/**
 * optional string description = 1;
 * @return {string}
 */
proto.groups.GetGroupReply.Error.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.groups.GetGroupReply.Error.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.groups.GetGroupReply.Error.Status}
 */
proto.groups.GetGroupReply.Error.prototype.getStatus = function() {
  return /** @type {!proto.groups.GetGroupReply.Error.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.groups.GetGroupReply.Error.Status} value */
proto.groups.GetGroupReply.Error.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional domain.Group group = 1;
 * @return {?proto.domain.Group}
 */
proto.groups.GetGroupReply.prototype.getGroup = function() {
  return /** @type{?proto.domain.Group} */ (
    jspb.Message.getWrapperField(this, domain_pb.Group, 1));
};


/** @param {?proto.domain.Group|undefined} value */
proto.groups.GetGroupReply.prototype.setGroup = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.groups.GetGroupReply.oneofGroups_[0], value);
};


proto.groups.GetGroupReply.prototype.clearGroup = function() {
  this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.groups.GetGroupReply.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.groups.GetGroupReply.Error}
 */
proto.groups.GetGroupReply.prototype.getError = function() {
  return /** @type{?proto.groups.GetGroupReply.Error} */ (
    jspb.Message.getWrapperField(this, proto.groups.GetGroupReply.Error, 2));
};


/** @param {?proto.groups.GetGroupReply.Error|undefined} value */
proto.groups.GetGroupReply.prototype.setError = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.groups.GetGroupReply.oneofGroups_[0], value);
};


proto.groups.GetGroupReply.prototype.clearError = function() {
  this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.groups.GetGroupReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.GetGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.groups.GetGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.GetGroupRequest.displayName = 'proto.groups.GetGroupRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.GetGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.GetGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.GetGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.GetGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.GetGroupRequest}
 */
proto.groups.GetGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.GetGroupRequest;
  return proto.groups.GetGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.GetGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.GetGroupRequest}
 */
proto.groups.GetGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.GetGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.GetGroupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.GetGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.GetGroupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string group_id = 1;
 * @return {string}
 */
proto.groups.GetGroupRequest.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.groups.GetGroupRequest.prototype.setGroupId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.CreateGroupReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.groups.CreateGroupReply.oneofGroups_);
};
goog.inherits(proto.groups.CreateGroupReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.CreateGroupReply.displayName = 'proto.groups.CreateGroupReply';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.groups.CreateGroupReply.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.groups.CreateGroupReply.ResultCase = {
  RESULT_NOT_SET: 0,
  GROUP_ID: 1,
  ERROR: 2
};

/**
 * @return {proto.groups.CreateGroupReply.ResultCase}
 */
proto.groups.CreateGroupReply.prototype.getResultCase = function() {
  return /** @type {proto.groups.CreateGroupReply.ResultCase} */(jspb.Message.computeOneofCase(this, proto.groups.CreateGroupReply.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.CreateGroupReply.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.CreateGroupReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.CreateGroupReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.CreateGroupReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && proto.groups.CreateGroupReply.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.CreateGroupReply}
 */
proto.groups.CreateGroupReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.CreateGroupReply;
  return proto.groups.CreateGroupReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.CreateGroupReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.CreateGroupReply}
 */
proto.groups.CreateGroupReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    case 2:
      var value = new proto.groups.CreateGroupReply.Error;
      reader.readMessage(value,proto.groups.CreateGroupReply.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.CreateGroupReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.CreateGroupReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.CreateGroupReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.CreateGroupReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.groups.CreateGroupReply.Error.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.CreateGroupReply.Error = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.groups.CreateGroupReply.Error, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.CreateGroupReply.Error.displayName = 'proto.groups.CreateGroupReply.Error';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.CreateGroupReply.Error.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.CreateGroupReply.Error.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.CreateGroupReply.Error} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.CreateGroupReply.Error.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.CreateGroupReply.Error}
 */
proto.groups.CreateGroupReply.Error.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.CreateGroupReply.Error;
  return proto.groups.CreateGroupReply.Error.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.CreateGroupReply.Error} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.CreateGroupReply.Error}
 */
proto.groups.CreateGroupReply.Error.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = /** @type {!proto.groups.CreateGroupReply.Error.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.CreateGroupReply.Error.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.CreateGroupReply.Error.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.CreateGroupReply.Error} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.CreateGroupReply.Error.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.groups.CreateGroupReply.Error.Status = {
  UNKNOWN: 0
};

/**
 * optional string description = 1;
 * @return {string}
 */
proto.groups.CreateGroupReply.Error.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.groups.CreateGroupReply.Error.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.groups.CreateGroupReply.Error.Status}
 */
proto.groups.CreateGroupReply.Error.prototype.getStatus = function() {
  return /** @type {!proto.groups.CreateGroupReply.Error.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.groups.CreateGroupReply.Error.Status} value */
proto.groups.CreateGroupReply.Error.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string group_id = 1;
 * @return {string}
 */
proto.groups.CreateGroupReply.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.groups.CreateGroupReply.prototype.setGroupId = function(value) {
  jspb.Message.setOneofField(this, 1, proto.groups.CreateGroupReply.oneofGroups_[0], value);
};


proto.groups.CreateGroupReply.prototype.clearGroupId = function() {
  jspb.Message.setOneofField(this, 1, proto.groups.CreateGroupReply.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.groups.CreateGroupReply.prototype.hasGroupId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.groups.CreateGroupReply.Error}
 */
proto.groups.CreateGroupReply.prototype.getError = function() {
  return /** @type{?proto.groups.CreateGroupReply.Error} */ (
    jspb.Message.getWrapperField(this, proto.groups.CreateGroupReply.Error, 2));
};


/** @param {?proto.groups.CreateGroupReply.Error|undefined} value */
proto.groups.CreateGroupReply.prototype.setError = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.groups.CreateGroupReply.oneofGroups_[0], value);
};


proto.groups.CreateGroupReply.prototype.clearError = function() {
  this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.groups.CreateGroupReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.groups.CreateGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.groups.CreateGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.groups.CreateGroupRequest.displayName = 'proto.groups.CreateGroupRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.groups.CreateGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.groups.CreateGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.groups.CreateGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.CreateGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.groups.CreateGroupRequest}
 */
proto.groups.CreateGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.groups.CreateGroupRequest;
  return proto.groups.CreateGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.groups.CreateGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.groups.CreateGroupRequest}
 */
proto.groups.CreateGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.groups.CreateGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.groups.CreateGroupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.groups.CreateGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.groups.CreateGroupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.groups.CreateGroupRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.groups.CreateGroupRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.groups.CreateGroupRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.groups.CreateGroupRequest.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.groups);
