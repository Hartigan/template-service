/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var domain_pb = require('./domain_pb.js');
goog.exportSymbol('proto.permissions.AddMembersReply', null, global);
goog.exportSymbol('proto.permissions.AddMembersReply.GroupEntry', null, global);
goog.exportSymbol('proto.permissions.AddMembersReply.Status', null, global);
goog.exportSymbol('proto.permissions.AddMembersReply.UserEntry', null, global);
goog.exportSymbol('proto.permissions.AddMembersRequest', null, global);
goog.exportSymbol('proto.permissions.GetAccessInfoReply', null, global);
goog.exportSymbol('proto.permissions.GetAccessInfoRequest', null, global);
goog.exportSymbol('proto.permissions.GetPermissionsReply', null, global);
goog.exportSymbol('proto.permissions.GetPermissionsReply.Error', null, global);
goog.exportSymbol('proto.permissions.GetPermissionsReply.Error.Status', null, global);
goog.exportSymbol('proto.permissions.GetPermissionsRequest', null, global);
goog.exportSymbol('proto.permissions.RemoveMembersReply', null, global);
goog.exportSymbol('proto.permissions.RemoveMembersReply.GroupEntry', null, global);
goog.exportSymbol('proto.permissions.RemoveMembersReply.Status', null, global);
goog.exportSymbol('proto.permissions.RemoveMembersReply.UserEntry', null, global);
goog.exportSymbol('proto.permissions.RemoveMembersRequest', null, global);
goog.exportSymbol('proto.permissions.SetIsPublicReply', null, global);
goog.exportSymbol('proto.permissions.SetIsPublicReply.Error', null, global);
goog.exportSymbol('proto.permissions.SetIsPublicReply.Error.Status', null, global);
goog.exportSymbol('proto.permissions.SetIsPublicRequest', null, global);
goog.exportSymbol('proto.permissions.UpdatePermissionsReply', null, global);
goog.exportSymbol('proto.permissions.UpdatePermissionsReply.GroupEntry', null, global);
goog.exportSymbol('proto.permissions.UpdatePermissionsReply.Status', null, global);
goog.exportSymbol('proto.permissions.UpdatePermissionsReply.UserEntry', null, global);
goog.exportSymbol('proto.permissions.UpdatePermissionsRequest', null, global);
goog.exportSymbol('proto.permissions.UpdatePermissionsRequest.GroupEntry', null, global);
goog.exportSymbol('proto.permissions.UpdatePermissionsRequest.UserEntry', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.permissions.RemoveMembersReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.permissions.RemoveMembersReply.repeatedFields_, null);
};
goog.inherits(proto.permissions.RemoveMembersReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.permissions.RemoveMembersReply.displayName = 'proto.permissions.RemoveMembersReply';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.permissions.RemoveMembersReply.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.permissions.RemoveMembersReply.prototype.toObject = function(opt_includeInstance) {
  return proto.permissions.RemoveMembersReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.permissions.RemoveMembersReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.RemoveMembersReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.permissions.RemoveMembersReply.UserEntry.toObject, includeInstance),
    groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    proto.permissions.RemoveMembersReply.GroupEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.permissions.RemoveMembersReply}
 */
proto.permissions.RemoveMembersReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.permissions.RemoveMembersReply;
  return proto.permissions.RemoveMembersReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.permissions.RemoveMembersReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.permissions.RemoveMembersReply}
 */
proto.permissions.RemoveMembersReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.permissions.RemoveMembersReply.UserEntry;
      reader.readMessage(value,proto.permissions.RemoveMembersReply.UserEntry.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    case 2:
      var value = new proto.permissions.RemoveMembersReply.GroupEntry;
      reader.readMessage(value,proto.permissions.RemoveMembersReply.GroupEntry.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.permissions.RemoveMembersReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.permissions.RemoveMembersReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.permissions.RemoveMembersReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.RemoveMembersReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.permissions.RemoveMembersReply.UserEntry.serializeBinaryToWriter
    );
  }
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.permissions.RemoveMembersReply.GroupEntry.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.permissions.RemoveMembersReply.Status = {
  OK: 0,
  UNKNOWN: 1,
  NO_ACCESS: 2,
  ITEM_NOT_FOUND: 3
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.permissions.RemoveMembersReply.GroupEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.permissions.RemoveMembersReply.GroupEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.permissions.RemoveMembersReply.GroupEntry.displayName = 'proto.permissions.RemoveMembersReply.GroupEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.permissions.RemoveMembersReply.GroupEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.permissions.RemoveMembersReply.GroupEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.permissions.RemoveMembersReply.GroupEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.RemoveMembersReply.GroupEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.permissions.RemoveMembersReply.GroupEntry}
 */
proto.permissions.RemoveMembersReply.GroupEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.permissions.RemoveMembersReply.GroupEntry;
  return proto.permissions.RemoveMembersReply.GroupEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.permissions.RemoveMembersReply.GroupEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.permissions.RemoveMembersReply.GroupEntry}
 */
proto.permissions.RemoveMembersReply.GroupEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    case 2:
      var value = /** @type {!proto.permissions.RemoveMembersReply.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.permissions.RemoveMembersReply.GroupEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.permissions.RemoveMembersReply.GroupEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.permissions.RemoveMembersReply.GroupEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.RemoveMembersReply.GroupEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string group_id = 1;
 * @return {string}
 */
proto.permissions.RemoveMembersReply.GroupEntry.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.permissions.RemoveMembersReply.GroupEntry.prototype.setGroupId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.permissions.RemoveMembersReply.Status}
 */
proto.permissions.RemoveMembersReply.GroupEntry.prototype.getStatus = function() {
  return /** @type {!proto.permissions.RemoveMembersReply.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.permissions.RemoveMembersReply.Status} value */
proto.permissions.RemoveMembersReply.GroupEntry.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.permissions.RemoveMembersReply.UserEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.permissions.RemoveMembersReply.UserEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.permissions.RemoveMembersReply.UserEntry.displayName = 'proto.permissions.RemoveMembersReply.UserEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.permissions.RemoveMembersReply.UserEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.permissions.RemoveMembersReply.UserEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.permissions.RemoveMembersReply.UserEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.RemoveMembersReply.UserEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.permissions.RemoveMembersReply.UserEntry}
 */
proto.permissions.RemoveMembersReply.UserEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.permissions.RemoveMembersReply.UserEntry;
  return proto.permissions.RemoveMembersReply.UserEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.permissions.RemoveMembersReply.UserEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.permissions.RemoveMembersReply.UserEntry}
 */
proto.permissions.RemoveMembersReply.UserEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {!proto.permissions.RemoveMembersReply.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.permissions.RemoveMembersReply.UserEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.permissions.RemoveMembersReply.UserEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.permissions.RemoveMembersReply.UserEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.RemoveMembersReply.UserEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.permissions.RemoveMembersReply.UserEntry.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.permissions.RemoveMembersReply.UserEntry.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.permissions.RemoveMembersReply.Status}
 */
proto.permissions.RemoveMembersReply.UserEntry.prototype.getStatus = function() {
  return /** @type {!proto.permissions.RemoveMembersReply.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.permissions.RemoveMembersReply.Status} value */
proto.permissions.RemoveMembersReply.UserEntry.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated UserEntry users = 1;
 * @return {!Array.<!proto.permissions.RemoveMembersReply.UserEntry>}
 */
proto.permissions.RemoveMembersReply.prototype.getUsersList = function() {
  return /** @type{!Array.<!proto.permissions.RemoveMembersReply.UserEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.permissions.RemoveMembersReply.UserEntry, 1));
};


/** @param {!Array.<!proto.permissions.RemoveMembersReply.UserEntry>} value */
proto.permissions.RemoveMembersReply.prototype.setUsersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.permissions.RemoveMembersReply.UserEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.permissions.RemoveMembersReply.UserEntry}
 */
proto.permissions.RemoveMembersReply.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.permissions.RemoveMembersReply.UserEntry, opt_index);
};


proto.permissions.RemoveMembersReply.prototype.clearUsersList = function() {
  this.setUsersList([]);
};


/**
 * repeated GroupEntry groups = 2;
 * @return {!Array.<!proto.permissions.RemoveMembersReply.GroupEntry>}
 */
proto.permissions.RemoveMembersReply.prototype.getGroupsList = function() {
  return /** @type{!Array.<!proto.permissions.RemoveMembersReply.GroupEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.permissions.RemoveMembersReply.GroupEntry, 2));
};


/** @param {!Array.<!proto.permissions.RemoveMembersReply.GroupEntry>} value */
proto.permissions.RemoveMembersReply.prototype.setGroupsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.permissions.RemoveMembersReply.GroupEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.permissions.RemoveMembersReply.GroupEntry}
 */
proto.permissions.RemoveMembersReply.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.permissions.RemoveMembersReply.GroupEntry, opt_index);
};


proto.permissions.RemoveMembersReply.prototype.clearGroupsList = function() {
  this.setGroupsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.permissions.RemoveMembersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.permissions.RemoveMembersRequest.repeatedFields_, null);
};
goog.inherits(proto.permissions.RemoveMembersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.permissions.RemoveMembersRequest.displayName = 'proto.permissions.RemoveMembersRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.permissions.RemoveMembersRequest.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.permissions.RemoveMembersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.permissions.RemoveMembersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.permissions.RemoveMembersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.RemoveMembersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    protecteditem: (f = msg.getProtecteditem()) && domain_pb.ProtectedItem.toObject(includeInstance, f),
    usersList: jspb.Message.getRepeatedField(msg, 2),
    groupsList: jspb.Message.getRepeatedField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.permissions.RemoveMembersRequest}
 */
proto.permissions.RemoveMembersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.permissions.RemoveMembersRequest;
  return proto.permissions.RemoveMembersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.permissions.RemoveMembersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.permissions.RemoveMembersRequest}
 */
proto.permissions.RemoveMembersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new domain_pb.ProtectedItem;
      reader.readMessage(value,domain_pb.ProtectedItem.deserializeBinaryFromReader);
      msg.setProtecteditem(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addUsers(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addGroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.permissions.RemoveMembersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.permissions.RemoveMembersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.permissions.RemoveMembersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.RemoveMembersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProtecteditem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      domain_pb.ProtectedItem.serializeBinaryToWriter
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional domain.ProtectedItem protectedItem = 1;
 * @return {?proto.domain.ProtectedItem}
 */
proto.permissions.RemoveMembersRequest.prototype.getProtecteditem = function() {
  return /** @type{?proto.domain.ProtectedItem} */ (
    jspb.Message.getWrapperField(this, domain_pb.ProtectedItem, 1));
};


/** @param {?proto.domain.ProtectedItem|undefined} value */
proto.permissions.RemoveMembersRequest.prototype.setProtecteditem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.permissions.RemoveMembersRequest.prototype.clearProtecteditem = function() {
  this.setProtecteditem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.permissions.RemoveMembersRequest.prototype.hasProtecteditem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string users = 2;
 * @return {!Array.<string>}
 */
proto.permissions.RemoveMembersRequest.prototype.getUsersList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array.<string>} value */
proto.permissions.RemoveMembersRequest.prototype.setUsersList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.permissions.RemoveMembersRequest.prototype.addUsers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.permissions.RemoveMembersRequest.prototype.clearUsersList = function() {
  this.setUsersList([]);
};


/**
 * repeated string groups = 3;
 * @return {!Array.<string>}
 */
proto.permissions.RemoveMembersRequest.prototype.getGroupsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array.<string>} value */
proto.permissions.RemoveMembersRequest.prototype.setGroupsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.permissions.RemoveMembersRequest.prototype.addGroups = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.permissions.RemoveMembersRequest.prototype.clearGroupsList = function() {
  this.setGroupsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.permissions.AddMembersReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.permissions.AddMembersReply.repeatedFields_, null);
};
goog.inherits(proto.permissions.AddMembersReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.permissions.AddMembersReply.displayName = 'proto.permissions.AddMembersReply';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.permissions.AddMembersReply.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.permissions.AddMembersReply.prototype.toObject = function(opt_includeInstance) {
  return proto.permissions.AddMembersReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.permissions.AddMembersReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.AddMembersReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.permissions.AddMembersReply.UserEntry.toObject, includeInstance),
    groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    proto.permissions.AddMembersReply.GroupEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.permissions.AddMembersReply}
 */
proto.permissions.AddMembersReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.permissions.AddMembersReply;
  return proto.permissions.AddMembersReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.permissions.AddMembersReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.permissions.AddMembersReply}
 */
proto.permissions.AddMembersReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.permissions.AddMembersReply.UserEntry;
      reader.readMessage(value,proto.permissions.AddMembersReply.UserEntry.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    case 2:
      var value = new proto.permissions.AddMembersReply.GroupEntry;
      reader.readMessage(value,proto.permissions.AddMembersReply.GroupEntry.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.permissions.AddMembersReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.permissions.AddMembersReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.permissions.AddMembersReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.AddMembersReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.permissions.AddMembersReply.UserEntry.serializeBinaryToWriter
    );
  }
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.permissions.AddMembersReply.GroupEntry.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.permissions.AddMembersReply.Status = {
  OK: 0,
  UNKNOWN: 1,
  NO_ACCESS: 2,
  ITEM_NOT_FOUND: 3
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.permissions.AddMembersReply.GroupEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.permissions.AddMembersReply.GroupEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.permissions.AddMembersReply.GroupEntry.displayName = 'proto.permissions.AddMembersReply.GroupEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.permissions.AddMembersReply.GroupEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.permissions.AddMembersReply.GroupEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.permissions.AddMembersReply.GroupEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.AddMembersReply.GroupEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.permissions.AddMembersReply.GroupEntry}
 */
proto.permissions.AddMembersReply.GroupEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.permissions.AddMembersReply.GroupEntry;
  return proto.permissions.AddMembersReply.GroupEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.permissions.AddMembersReply.GroupEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.permissions.AddMembersReply.GroupEntry}
 */
proto.permissions.AddMembersReply.GroupEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    case 2:
      var value = /** @type {!proto.permissions.AddMembersReply.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.permissions.AddMembersReply.GroupEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.permissions.AddMembersReply.GroupEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.permissions.AddMembersReply.GroupEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.AddMembersReply.GroupEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string group_id = 1;
 * @return {string}
 */
proto.permissions.AddMembersReply.GroupEntry.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.permissions.AddMembersReply.GroupEntry.prototype.setGroupId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.permissions.AddMembersReply.Status}
 */
proto.permissions.AddMembersReply.GroupEntry.prototype.getStatus = function() {
  return /** @type {!proto.permissions.AddMembersReply.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.permissions.AddMembersReply.Status} value */
proto.permissions.AddMembersReply.GroupEntry.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.permissions.AddMembersReply.UserEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.permissions.AddMembersReply.UserEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.permissions.AddMembersReply.UserEntry.displayName = 'proto.permissions.AddMembersReply.UserEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.permissions.AddMembersReply.UserEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.permissions.AddMembersReply.UserEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.permissions.AddMembersReply.UserEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.AddMembersReply.UserEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.permissions.AddMembersReply.UserEntry}
 */
proto.permissions.AddMembersReply.UserEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.permissions.AddMembersReply.UserEntry;
  return proto.permissions.AddMembersReply.UserEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.permissions.AddMembersReply.UserEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.permissions.AddMembersReply.UserEntry}
 */
proto.permissions.AddMembersReply.UserEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {!proto.permissions.AddMembersReply.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.permissions.AddMembersReply.UserEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.permissions.AddMembersReply.UserEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.permissions.AddMembersReply.UserEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.AddMembersReply.UserEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.permissions.AddMembersReply.UserEntry.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.permissions.AddMembersReply.UserEntry.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.permissions.AddMembersReply.Status}
 */
proto.permissions.AddMembersReply.UserEntry.prototype.getStatus = function() {
  return /** @type {!proto.permissions.AddMembersReply.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.permissions.AddMembersReply.Status} value */
proto.permissions.AddMembersReply.UserEntry.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated UserEntry users = 1;
 * @return {!Array.<!proto.permissions.AddMembersReply.UserEntry>}
 */
proto.permissions.AddMembersReply.prototype.getUsersList = function() {
  return /** @type{!Array.<!proto.permissions.AddMembersReply.UserEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.permissions.AddMembersReply.UserEntry, 1));
};


/** @param {!Array.<!proto.permissions.AddMembersReply.UserEntry>} value */
proto.permissions.AddMembersReply.prototype.setUsersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.permissions.AddMembersReply.UserEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.permissions.AddMembersReply.UserEntry}
 */
proto.permissions.AddMembersReply.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.permissions.AddMembersReply.UserEntry, opt_index);
};


proto.permissions.AddMembersReply.prototype.clearUsersList = function() {
  this.setUsersList([]);
};


/**
 * repeated GroupEntry groups = 2;
 * @return {!Array.<!proto.permissions.AddMembersReply.GroupEntry>}
 */
proto.permissions.AddMembersReply.prototype.getGroupsList = function() {
  return /** @type{!Array.<!proto.permissions.AddMembersReply.GroupEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.permissions.AddMembersReply.GroupEntry, 2));
};


/** @param {!Array.<!proto.permissions.AddMembersReply.GroupEntry>} value */
proto.permissions.AddMembersReply.prototype.setGroupsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.permissions.AddMembersReply.GroupEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.permissions.AddMembersReply.GroupEntry}
 */
proto.permissions.AddMembersReply.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.permissions.AddMembersReply.GroupEntry, opt_index);
};


proto.permissions.AddMembersReply.prototype.clearGroupsList = function() {
  this.setGroupsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.permissions.AddMembersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.permissions.AddMembersRequest.repeatedFields_, null);
};
goog.inherits(proto.permissions.AddMembersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.permissions.AddMembersRequest.displayName = 'proto.permissions.AddMembersRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.permissions.AddMembersRequest.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.permissions.AddMembersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.permissions.AddMembersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.permissions.AddMembersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.AddMembersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    protecteditem: (f = msg.getProtecteditem()) && domain_pb.ProtectedItem.toObject(includeInstance, f),
    usersList: jspb.Message.getRepeatedField(msg, 2),
    groupsList: jspb.Message.getRepeatedField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.permissions.AddMembersRequest}
 */
proto.permissions.AddMembersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.permissions.AddMembersRequest;
  return proto.permissions.AddMembersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.permissions.AddMembersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.permissions.AddMembersRequest}
 */
proto.permissions.AddMembersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new domain_pb.ProtectedItem;
      reader.readMessage(value,domain_pb.ProtectedItem.deserializeBinaryFromReader);
      msg.setProtecteditem(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addUsers(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addGroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.permissions.AddMembersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.permissions.AddMembersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.permissions.AddMembersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.AddMembersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProtecteditem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      domain_pb.ProtectedItem.serializeBinaryToWriter
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional domain.ProtectedItem protectedItem = 1;
 * @return {?proto.domain.ProtectedItem}
 */
proto.permissions.AddMembersRequest.prototype.getProtecteditem = function() {
  return /** @type{?proto.domain.ProtectedItem} */ (
    jspb.Message.getWrapperField(this, domain_pb.ProtectedItem, 1));
};


/** @param {?proto.domain.ProtectedItem|undefined} value */
proto.permissions.AddMembersRequest.prototype.setProtecteditem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.permissions.AddMembersRequest.prototype.clearProtecteditem = function() {
  this.setProtecteditem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.permissions.AddMembersRequest.prototype.hasProtecteditem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string users = 2;
 * @return {!Array.<string>}
 */
proto.permissions.AddMembersRequest.prototype.getUsersList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array.<string>} value */
proto.permissions.AddMembersRequest.prototype.setUsersList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.permissions.AddMembersRequest.prototype.addUsers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.permissions.AddMembersRequest.prototype.clearUsersList = function() {
  this.setUsersList([]);
};


/**
 * repeated string groups = 3;
 * @return {!Array.<string>}
 */
proto.permissions.AddMembersRequest.prototype.getGroupsList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array.<string>} value */
proto.permissions.AddMembersRequest.prototype.setGroupsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.permissions.AddMembersRequest.prototype.addGroups = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.permissions.AddMembersRequest.prototype.clearGroupsList = function() {
  this.setGroupsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.permissions.UpdatePermissionsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.permissions.UpdatePermissionsReply.repeatedFields_, null);
};
goog.inherits(proto.permissions.UpdatePermissionsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.permissions.UpdatePermissionsReply.displayName = 'proto.permissions.UpdatePermissionsReply';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.permissions.UpdatePermissionsReply.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.permissions.UpdatePermissionsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.permissions.UpdatePermissionsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.permissions.UpdatePermissionsReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.UpdatePermissionsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.permissions.UpdatePermissionsReply.UserEntry.toObject, includeInstance),
    groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    proto.permissions.UpdatePermissionsReply.GroupEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.permissions.UpdatePermissionsReply}
 */
proto.permissions.UpdatePermissionsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.permissions.UpdatePermissionsReply;
  return proto.permissions.UpdatePermissionsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.permissions.UpdatePermissionsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.permissions.UpdatePermissionsReply}
 */
proto.permissions.UpdatePermissionsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.permissions.UpdatePermissionsReply.UserEntry;
      reader.readMessage(value,proto.permissions.UpdatePermissionsReply.UserEntry.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    case 2:
      var value = new proto.permissions.UpdatePermissionsReply.GroupEntry;
      reader.readMessage(value,proto.permissions.UpdatePermissionsReply.GroupEntry.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.permissions.UpdatePermissionsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.permissions.UpdatePermissionsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.permissions.UpdatePermissionsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.UpdatePermissionsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.permissions.UpdatePermissionsReply.UserEntry.serializeBinaryToWriter
    );
  }
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.permissions.UpdatePermissionsReply.GroupEntry.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.permissions.UpdatePermissionsReply.Status = {
  OK: 0,
  UNKNOWN: 1,
  NO_ACCESS: 2,
  ITEM_NOT_FOUND: 3
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.permissions.UpdatePermissionsReply.GroupEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.permissions.UpdatePermissionsReply.GroupEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.permissions.UpdatePermissionsReply.GroupEntry.displayName = 'proto.permissions.UpdatePermissionsReply.GroupEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.permissions.UpdatePermissionsReply.GroupEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.permissions.UpdatePermissionsReply.GroupEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.permissions.UpdatePermissionsReply.GroupEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.UpdatePermissionsReply.GroupEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.permissions.UpdatePermissionsReply.GroupEntry}
 */
proto.permissions.UpdatePermissionsReply.GroupEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.permissions.UpdatePermissionsReply.GroupEntry;
  return proto.permissions.UpdatePermissionsReply.GroupEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.permissions.UpdatePermissionsReply.GroupEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.permissions.UpdatePermissionsReply.GroupEntry}
 */
proto.permissions.UpdatePermissionsReply.GroupEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    case 2:
      var value = /** @type {!proto.permissions.UpdatePermissionsReply.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.permissions.UpdatePermissionsReply.GroupEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.permissions.UpdatePermissionsReply.GroupEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.permissions.UpdatePermissionsReply.GroupEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.UpdatePermissionsReply.GroupEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string group_id = 1;
 * @return {string}
 */
proto.permissions.UpdatePermissionsReply.GroupEntry.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.permissions.UpdatePermissionsReply.GroupEntry.prototype.setGroupId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.permissions.UpdatePermissionsReply.Status}
 */
proto.permissions.UpdatePermissionsReply.GroupEntry.prototype.getStatus = function() {
  return /** @type {!proto.permissions.UpdatePermissionsReply.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.permissions.UpdatePermissionsReply.Status} value */
proto.permissions.UpdatePermissionsReply.GroupEntry.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.permissions.UpdatePermissionsReply.UserEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.permissions.UpdatePermissionsReply.UserEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.permissions.UpdatePermissionsReply.UserEntry.displayName = 'proto.permissions.UpdatePermissionsReply.UserEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.permissions.UpdatePermissionsReply.UserEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.permissions.UpdatePermissionsReply.UserEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.permissions.UpdatePermissionsReply.UserEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.UpdatePermissionsReply.UserEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.permissions.UpdatePermissionsReply.UserEntry}
 */
proto.permissions.UpdatePermissionsReply.UserEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.permissions.UpdatePermissionsReply.UserEntry;
  return proto.permissions.UpdatePermissionsReply.UserEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.permissions.UpdatePermissionsReply.UserEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.permissions.UpdatePermissionsReply.UserEntry}
 */
proto.permissions.UpdatePermissionsReply.UserEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {!proto.permissions.UpdatePermissionsReply.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.permissions.UpdatePermissionsReply.UserEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.permissions.UpdatePermissionsReply.UserEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.permissions.UpdatePermissionsReply.UserEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.UpdatePermissionsReply.UserEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.permissions.UpdatePermissionsReply.UserEntry.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.permissions.UpdatePermissionsReply.UserEntry.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.permissions.UpdatePermissionsReply.Status}
 */
proto.permissions.UpdatePermissionsReply.UserEntry.prototype.getStatus = function() {
  return /** @type {!proto.permissions.UpdatePermissionsReply.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.permissions.UpdatePermissionsReply.Status} value */
proto.permissions.UpdatePermissionsReply.UserEntry.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated UserEntry users = 1;
 * @return {!Array.<!proto.permissions.UpdatePermissionsReply.UserEntry>}
 */
proto.permissions.UpdatePermissionsReply.prototype.getUsersList = function() {
  return /** @type{!Array.<!proto.permissions.UpdatePermissionsReply.UserEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.permissions.UpdatePermissionsReply.UserEntry, 1));
};


/** @param {!Array.<!proto.permissions.UpdatePermissionsReply.UserEntry>} value */
proto.permissions.UpdatePermissionsReply.prototype.setUsersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.permissions.UpdatePermissionsReply.UserEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.permissions.UpdatePermissionsReply.UserEntry}
 */
proto.permissions.UpdatePermissionsReply.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.permissions.UpdatePermissionsReply.UserEntry, opt_index);
};


proto.permissions.UpdatePermissionsReply.prototype.clearUsersList = function() {
  this.setUsersList([]);
};


/**
 * repeated GroupEntry groups = 2;
 * @return {!Array.<!proto.permissions.UpdatePermissionsReply.GroupEntry>}
 */
proto.permissions.UpdatePermissionsReply.prototype.getGroupsList = function() {
  return /** @type{!Array.<!proto.permissions.UpdatePermissionsReply.GroupEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.permissions.UpdatePermissionsReply.GroupEntry, 2));
};


/** @param {!Array.<!proto.permissions.UpdatePermissionsReply.GroupEntry>} value */
proto.permissions.UpdatePermissionsReply.prototype.setGroupsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.permissions.UpdatePermissionsReply.GroupEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.permissions.UpdatePermissionsReply.GroupEntry}
 */
proto.permissions.UpdatePermissionsReply.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.permissions.UpdatePermissionsReply.GroupEntry, opt_index);
};


proto.permissions.UpdatePermissionsReply.prototype.clearGroupsList = function() {
  this.setGroupsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.permissions.UpdatePermissionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.permissions.UpdatePermissionsRequest.repeatedFields_, null);
};
goog.inherits(proto.permissions.UpdatePermissionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.permissions.UpdatePermissionsRequest.displayName = 'proto.permissions.UpdatePermissionsRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.permissions.UpdatePermissionsRequest.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.permissions.UpdatePermissionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.permissions.UpdatePermissionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.permissions.UpdatePermissionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.UpdatePermissionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    protecteditem: (f = msg.getProtecteditem()) && domain_pb.ProtectedItem.toObject(includeInstance, f),
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.permissions.UpdatePermissionsRequest.UserEntry.toObject, includeInstance),
    groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    proto.permissions.UpdatePermissionsRequest.GroupEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.permissions.UpdatePermissionsRequest}
 */
proto.permissions.UpdatePermissionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.permissions.UpdatePermissionsRequest;
  return proto.permissions.UpdatePermissionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.permissions.UpdatePermissionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.permissions.UpdatePermissionsRequest}
 */
proto.permissions.UpdatePermissionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new domain_pb.ProtectedItem;
      reader.readMessage(value,domain_pb.ProtectedItem.deserializeBinaryFromReader);
      msg.setProtecteditem(value);
      break;
    case 2:
      var value = new proto.permissions.UpdatePermissionsRequest.UserEntry;
      reader.readMessage(value,proto.permissions.UpdatePermissionsRequest.UserEntry.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    case 3:
      var value = new proto.permissions.UpdatePermissionsRequest.GroupEntry;
      reader.readMessage(value,proto.permissions.UpdatePermissionsRequest.GroupEntry.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.permissions.UpdatePermissionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.permissions.UpdatePermissionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.permissions.UpdatePermissionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.UpdatePermissionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProtecteditem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      domain_pb.ProtectedItem.serializeBinaryToWriter
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.permissions.UpdatePermissionsRequest.UserEntry.serializeBinaryToWriter
    );
  }
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.permissions.UpdatePermissionsRequest.GroupEntry.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.permissions.UpdatePermissionsRequest.GroupEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.permissions.UpdatePermissionsRequest.GroupEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.permissions.UpdatePermissionsRequest.GroupEntry.displayName = 'proto.permissions.UpdatePermissionsRequest.GroupEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.permissions.UpdatePermissionsRequest.GroupEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.permissions.UpdatePermissionsRequest.GroupEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.permissions.UpdatePermissionsRequest.GroupEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.UpdatePermissionsRequest.GroupEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    access: (f = msg.getAccess()) && domain_pb.Access.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.permissions.UpdatePermissionsRequest.GroupEntry}
 */
proto.permissions.UpdatePermissionsRequest.GroupEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.permissions.UpdatePermissionsRequest.GroupEntry;
  return proto.permissions.UpdatePermissionsRequest.GroupEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.permissions.UpdatePermissionsRequest.GroupEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.permissions.UpdatePermissionsRequest.GroupEntry}
 */
proto.permissions.UpdatePermissionsRequest.GroupEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    case 2:
      var value = new domain_pb.Access;
      reader.readMessage(value,domain_pb.Access.deserializeBinaryFromReader);
      msg.setAccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.permissions.UpdatePermissionsRequest.GroupEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.permissions.UpdatePermissionsRequest.GroupEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.permissions.UpdatePermissionsRequest.GroupEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.UpdatePermissionsRequest.GroupEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccess();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      domain_pb.Access.serializeBinaryToWriter
    );
  }
};


/**
 * optional string group_id = 1;
 * @return {string}
 */
proto.permissions.UpdatePermissionsRequest.GroupEntry.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.permissions.UpdatePermissionsRequest.GroupEntry.prototype.setGroupId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional domain.Access access = 2;
 * @return {?proto.domain.Access}
 */
proto.permissions.UpdatePermissionsRequest.GroupEntry.prototype.getAccess = function() {
  return /** @type{?proto.domain.Access} */ (
    jspb.Message.getWrapperField(this, domain_pb.Access, 2));
};


/** @param {?proto.domain.Access|undefined} value */
proto.permissions.UpdatePermissionsRequest.GroupEntry.prototype.setAccess = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.permissions.UpdatePermissionsRequest.GroupEntry.prototype.clearAccess = function() {
  this.setAccess(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.permissions.UpdatePermissionsRequest.GroupEntry.prototype.hasAccess = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.permissions.UpdatePermissionsRequest.UserEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.permissions.UpdatePermissionsRequest.UserEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.permissions.UpdatePermissionsRequest.UserEntry.displayName = 'proto.permissions.UpdatePermissionsRequest.UserEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.permissions.UpdatePermissionsRequest.UserEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.permissions.UpdatePermissionsRequest.UserEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.permissions.UpdatePermissionsRequest.UserEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.UpdatePermissionsRequest.UserEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    access: (f = msg.getAccess()) && domain_pb.Access.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.permissions.UpdatePermissionsRequest.UserEntry}
 */
proto.permissions.UpdatePermissionsRequest.UserEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.permissions.UpdatePermissionsRequest.UserEntry;
  return proto.permissions.UpdatePermissionsRequest.UserEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.permissions.UpdatePermissionsRequest.UserEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.permissions.UpdatePermissionsRequest.UserEntry}
 */
proto.permissions.UpdatePermissionsRequest.UserEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = new domain_pb.Access;
      reader.readMessage(value,domain_pb.Access.deserializeBinaryFromReader);
      msg.setAccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.permissions.UpdatePermissionsRequest.UserEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.permissions.UpdatePermissionsRequest.UserEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.permissions.UpdatePermissionsRequest.UserEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.UpdatePermissionsRequest.UserEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccess();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      domain_pb.Access.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.permissions.UpdatePermissionsRequest.UserEntry.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.permissions.UpdatePermissionsRequest.UserEntry.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional domain.Access access = 2;
 * @return {?proto.domain.Access}
 */
proto.permissions.UpdatePermissionsRequest.UserEntry.prototype.getAccess = function() {
  return /** @type{?proto.domain.Access} */ (
    jspb.Message.getWrapperField(this, domain_pb.Access, 2));
};


/** @param {?proto.domain.Access|undefined} value */
proto.permissions.UpdatePermissionsRequest.UserEntry.prototype.setAccess = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.permissions.UpdatePermissionsRequest.UserEntry.prototype.clearAccess = function() {
  this.setAccess(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.permissions.UpdatePermissionsRequest.UserEntry.prototype.hasAccess = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional domain.ProtectedItem protectedItem = 1;
 * @return {?proto.domain.ProtectedItem}
 */
proto.permissions.UpdatePermissionsRequest.prototype.getProtecteditem = function() {
  return /** @type{?proto.domain.ProtectedItem} */ (
    jspb.Message.getWrapperField(this, domain_pb.ProtectedItem, 1));
};


/** @param {?proto.domain.ProtectedItem|undefined} value */
proto.permissions.UpdatePermissionsRequest.prototype.setProtecteditem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.permissions.UpdatePermissionsRequest.prototype.clearProtecteditem = function() {
  this.setProtecteditem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.permissions.UpdatePermissionsRequest.prototype.hasProtecteditem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated UserEntry users = 2;
 * @return {!Array.<!proto.permissions.UpdatePermissionsRequest.UserEntry>}
 */
proto.permissions.UpdatePermissionsRequest.prototype.getUsersList = function() {
  return /** @type{!Array.<!proto.permissions.UpdatePermissionsRequest.UserEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.permissions.UpdatePermissionsRequest.UserEntry, 2));
};


/** @param {!Array.<!proto.permissions.UpdatePermissionsRequest.UserEntry>} value */
proto.permissions.UpdatePermissionsRequest.prototype.setUsersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.permissions.UpdatePermissionsRequest.UserEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.permissions.UpdatePermissionsRequest.UserEntry}
 */
proto.permissions.UpdatePermissionsRequest.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.permissions.UpdatePermissionsRequest.UserEntry, opt_index);
};


proto.permissions.UpdatePermissionsRequest.prototype.clearUsersList = function() {
  this.setUsersList([]);
};


/**
 * repeated GroupEntry groups = 3;
 * @return {!Array.<!proto.permissions.UpdatePermissionsRequest.GroupEntry>}
 */
proto.permissions.UpdatePermissionsRequest.prototype.getGroupsList = function() {
  return /** @type{!Array.<!proto.permissions.UpdatePermissionsRequest.GroupEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.permissions.UpdatePermissionsRequest.GroupEntry, 3));
};


/** @param {!Array.<!proto.permissions.UpdatePermissionsRequest.GroupEntry>} value */
proto.permissions.UpdatePermissionsRequest.prototype.setGroupsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.permissions.UpdatePermissionsRequest.GroupEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.permissions.UpdatePermissionsRequest.GroupEntry}
 */
proto.permissions.UpdatePermissionsRequest.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.permissions.UpdatePermissionsRequest.GroupEntry, opt_index);
};


proto.permissions.UpdatePermissionsRequest.prototype.clearGroupsList = function() {
  this.setGroupsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.permissions.GetAccessInfoReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.permissions.GetAccessInfoReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.permissions.GetAccessInfoReply.displayName = 'proto.permissions.GetAccessInfoReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.permissions.GetAccessInfoReply.prototype.toObject = function(opt_includeInstance) {
  return proto.permissions.GetAccessInfoReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.permissions.GetAccessInfoReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.GetAccessInfoReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessMap: (f = msg.getAccessMap()) ? f.toObject(includeInstance, proto.domain.Access.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.permissions.GetAccessInfoReply}
 */
proto.permissions.GetAccessInfoReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.permissions.GetAccessInfoReply;
  return proto.permissions.GetAccessInfoReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.permissions.GetAccessInfoReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.permissions.GetAccessInfoReply}
 */
proto.permissions.GetAccessInfoReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getAccessMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.domain.Access.deserializeBinaryFromReader);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.permissions.GetAccessInfoReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.permissions.GetAccessInfoReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.permissions.GetAccessInfoReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.GetAccessInfoReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.domain.Access.serializeBinaryToWriter);
  }
};


/**
 * map<string, domain.Access> access = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.domain.Access>}
 */
proto.permissions.GetAccessInfoReply.prototype.getAccessMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.domain.Access>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.domain.Access));
};


proto.permissions.GetAccessInfoReply.prototype.clearAccessMap = function() {
  this.getAccessMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.permissions.GetAccessInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.permissions.GetAccessInfoRequest.repeatedFields_, null);
};
goog.inherits(proto.permissions.GetAccessInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.permissions.GetAccessInfoRequest.displayName = 'proto.permissions.GetAccessInfoRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.permissions.GetAccessInfoRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.permissions.GetAccessInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.permissions.GetAccessInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.permissions.GetAccessInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.GetAccessInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    protecteditemsList: jspb.Message.toObjectList(msg.getProtecteditemsList(),
    domain_pb.ProtectedItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.permissions.GetAccessInfoRequest}
 */
proto.permissions.GetAccessInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.permissions.GetAccessInfoRequest;
  return proto.permissions.GetAccessInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.permissions.GetAccessInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.permissions.GetAccessInfoRequest}
 */
proto.permissions.GetAccessInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new domain_pb.ProtectedItem;
      reader.readMessage(value,domain_pb.ProtectedItem.deserializeBinaryFromReader);
      msg.addProtecteditems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.permissions.GetAccessInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.permissions.GetAccessInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.permissions.GetAccessInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.GetAccessInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProtecteditemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      domain_pb.ProtectedItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated domain.ProtectedItem protectedItems = 1;
 * @return {!Array.<!proto.domain.ProtectedItem>}
 */
proto.permissions.GetAccessInfoRequest.prototype.getProtecteditemsList = function() {
  return /** @type{!Array.<!proto.domain.ProtectedItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, domain_pb.ProtectedItem, 1));
};


/** @param {!Array.<!proto.domain.ProtectedItem>} value */
proto.permissions.GetAccessInfoRequest.prototype.setProtecteditemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.domain.ProtectedItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.domain.ProtectedItem}
 */
proto.permissions.GetAccessInfoRequest.prototype.addProtecteditems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.domain.ProtectedItem, opt_index);
};


proto.permissions.GetAccessInfoRequest.prototype.clearProtecteditemsList = function() {
  this.setProtecteditemsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.permissions.SetIsPublicReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.permissions.SetIsPublicReply.oneofGroups_);
};
goog.inherits(proto.permissions.SetIsPublicReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.permissions.SetIsPublicReply.displayName = 'proto.permissions.SetIsPublicReply';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.permissions.SetIsPublicReply.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.permissions.SetIsPublicReply.ResultCase = {
  RESULT_NOT_SET: 0,
  ERROR: 1
};

/**
 * @return {proto.permissions.SetIsPublicReply.ResultCase}
 */
proto.permissions.SetIsPublicReply.prototype.getResultCase = function() {
  return /** @type {proto.permissions.SetIsPublicReply.ResultCase} */(jspb.Message.computeOneofCase(this, proto.permissions.SetIsPublicReply.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.permissions.SetIsPublicReply.prototype.toObject = function(opt_includeInstance) {
  return proto.permissions.SetIsPublicReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.permissions.SetIsPublicReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.SetIsPublicReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: (f = msg.getError()) && proto.permissions.SetIsPublicReply.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.permissions.SetIsPublicReply}
 */
proto.permissions.SetIsPublicReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.permissions.SetIsPublicReply;
  return proto.permissions.SetIsPublicReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.permissions.SetIsPublicReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.permissions.SetIsPublicReply}
 */
proto.permissions.SetIsPublicReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.permissions.SetIsPublicReply.Error;
      reader.readMessage(value,proto.permissions.SetIsPublicReply.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.permissions.SetIsPublicReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.permissions.SetIsPublicReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.permissions.SetIsPublicReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.SetIsPublicReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.permissions.SetIsPublicReply.Error.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.permissions.SetIsPublicReply.Error = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.permissions.SetIsPublicReply.Error, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.permissions.SetIsPublicReply.Error.displayName = 'proto.permissions.SetIsPublicReply.Error';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.permissions.SetIsPublicReply.Error.prototype.toObject = function(opt_includeInstance) {
  return proto.permissions.SetIsPublicReply.Error.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.permissions.SetIsPublicReply.Error} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.SetIsPublicReply.Error.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.permissions.SetIsPublicReply.Error}
 */
proto.permissions.SetIsPublicReply.Error.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.permissions.SetIsPublicReply.Error;
  return proto.permissions.SetIsPublicReply.Error.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.permissions.SetIsPublicReply.Error} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.permissions.SetIsPublicReply.Error}
 */
proto.permissions.SetIsPublicReply.Error.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = /** @type {!proto.permissions.SetIsPublicReply.Error.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.permissions.SetIsPublicReply.Error.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.permissions.SetIsPublicReply.Error.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.permissions.SetIsPublicReply.Error} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.SetIsPublicReply.Error.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.permissions.SetIsPublicReply.Error.Status = {
  UNKNOWN: 0,
  NO_ACCESS: 1,
  WRONG_REQUEST: 2
};

/**
 * optional string description = 1;
 * @return {string}
 */
proto.permissions.SetIsPublicReply.Error.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.permissions.SetIsPublicReply.Error.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.permissions.SetIsPublicReply.Error.Status}
 */
proto.permissions.SetIsPublicReply.Error.prototype.getStatus = function() {
  return /** @type {!proto.permissions.SetIsPublicReply.Error.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.permissions.SetIsPublicReply.Error.Status} value */
proto.permissions.SetIsPublicReply.Error.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Error error = 1;
 * @return {?proto.permissions.SetIsPublicReply.Error}
 */
proto.permissions.SetIsPublicReply.prototype.getError = function() {
  return /** @type{?proto.permissions.SetIsPublicReply.Error} */ (
    jspb.Message.getWrapperField(this, proto.permissions.SetIsPublicReply.Error, 1));
};


/** @param {?proto.permissions.SetIsPublicReply.Error|undefined} value */
proto.permissions.SetIsPublicReply.prototype.setError = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.permissions.SetIsPublicReply.oneofGroups_[0], value);
};


proto.permissions.SetIsPublicReply.prototype.clearError = function() {
  this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.permissions.SetIsPublicReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.permissions.SetIsPublicRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.permissions.SetIsPublicRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.permissions.SetIsPublicRequest.displayName = 'proto.permissions.SetIsPublicRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.permissions.SetIsPublicRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.permissions.SetIsPublicRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.permissions.SetIsPublicRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.SetIsPublicRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    isPublic: jspb.Message.getFieldWithDefault(msg, 1, false),
    protecteditem: (f = msg.getProtecteditem()) && domain_pb.ProtectedItem.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.permissions.SetIsPublicRequest}
 */
proto.permissions.SetIsPublicRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.permissions.SetIsPublicRequest;
  return proto.permissions.SetIsPublicRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.permissions.SetIsPublicRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.permissions.SetIsPublicRequest}
 */
proto.permissions.SetIsPublicRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPublic(value);
      break;
    case 2:
      var value = new domain_pb.ProtectedItem;
      reader.readMessage(value,domain_pb.ProtectedItem.deserializeBinaryFromReader);
      msg.setProtecteditem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.permissions.SetIsPublicRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.permissions.SetIsPublicRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.permissions.SetIsPublicRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.SetIsPublicRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsPublic();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getProtecteditem();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      domain_pb.ProtectedItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool is_public = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.permissions.SetIsPublicRequest.prototype.getIsPublic = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.permissions.SetIsPublicRequest.prototype.setIsPublic = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional domain.ProtectedItem protectedItem = 2;
 * @return {?proto.domain.ProtectedItem}
 */
proto.permissions.SetIsPublicRequest.prototype.getProtecteditem = function() {
  return /** @type{?proto.domain.ProtectedItem} */ (
    jspb.Message.getWrapperField(this, domain_pb.ProtectedItem, 2));
};


/** @param {?proto.domain.ProtectedItem|undefined} value */
proto.permissions.SetIsPublicRequest.prototype.setProtecteditem = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.permissions.SetIsPublicRequest.prototype.clearProtecteditem = function() {
  this.setProtecteditem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.permissions.SetIsPublicRequest.prototype.hasProtecteditem = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.permissions.GetPermissionsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.permissions.GetPermissionsReply.oneofGroups_);
};
goog.inherits(proto.permissions.GetPermissionsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.permissions.GetPermissionsReply.displayName = 'proto.permissions.GetPermissionsReply';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.permissions.GetPermissionsReply.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.permissions.GetPermissionsReply.ResultCase = {
  RESULT_NOT_SET: 0,
  PERMISSIONS: 1,
  ERROR: 2
};

/**
 * @return {proto.permissions.GetPermissionsReply.ResultCase}
 */
proto.permissions.GetPermissionsReply.prototype.getResultCase = function() {
  return /** @type {proto.permissions.GetPermissionsReply.ResultCase} */(jspb.Message.computeOneofCase(this, proto.permissions.GetPermissionsReply.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.permissions.GetPermissionsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.permissions.GetPermissionsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.permissions.GetPermissionsReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.GetPermissionsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    permissions: (f = msg.getPermissions()) && domain_pb.Permissions.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.permissions.GetPermissionsReply.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.permissions.GetPermissionsReply}
 */
proto.permissions.GetPermissionsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.permissions.GetPermissionsReply;
  return proto.permissions.GetPermissionsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.permissions.GetPermissionsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.permissions.GetPermissionsReply}
 */
proto.permissions.GetPermissionsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new domain_pb.Permissions;
      reader.readMessage(value,domain_pb.Permissions.deserializeBinaryFromReader);
      msg.setPermissions(value);
      break;
    case 2:
      var value = new proto.permissions.GetPermissionsReply.Error;
      reader.readMessage(value,proto.permissions.GetPermissionsReply.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.permissions.GetPermissionsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.permissions.GetPermissionsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.permissions.GetPermissionsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.GetPermissionsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPermissions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      domain_pb.Permissions.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.permissions.GetPermissionsReply.Error.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.permissions.GetPermissionsReply.Error = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.permissions.GetPermissionsReply.Error, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.permissions.GetPermissionsReply.Error.displayName = 'proto.permissions.GetPermissionsReply.Error';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.permissions.GetPermissionsReply.Error.prototype.toObject = function(opt_includeInstance) {
  return proto.permissions.GetPermissionsReply.Error.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.permissions.GetPermissionsReply.Error} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.GetPermissionsReply.Error.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.permissions.GetPermissionsReply.Error}
 */
proto.permissions.GetPermissionsReply.Error.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.permissions.GetPermissionsReply.Error;
  return proto.permissions.GetPermissionsReply.Error.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.permissions.GetPermissionsReply.Error} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.permissions.GetPermissionsReply.Error}
 */
proto.permissions.GetPermissionsReply.Error.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 2:
      var value = /** @type {!proto.permissions.GetPermissionsReply.Error.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.permissions.GetPermissionsReply.Error.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.permissions.GetPermissionsReply.Error.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.permissions.GetPermissionsReply.Error} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.GetPermissionsReply.Error.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.permissions.GetPermissionsReply.Error.Status = {
  UNKNOWN: 0,
  NO_ACCESS: 1,
  WRONG_REQUEST: 2
};

/**
 * optional string description = 1;
 * @return {string}
 */
proto.permissions.GetPermissionsReply.Error.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.permissions.GetPermissionsReply.Error.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Status status = 2;
 * @return {!proto.permissions.GetPermissionsReply.Error.Status}
 */
proto.permissions.GetPermissionsReply.Error.prototype.getStatus = function() {
  return /** @type {!proto.permissions.GetPermissionsReply.Error.Status} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.permissions.GetPermissionsReply.Error.Status} value */
proto.permissions.GetPermissionsReply.Error.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional domain.Permissions permissions = 1;
 * @return {?proto.domain.Permissions}
 */
proto.permissions.GetPermissionsReply.prototype.getPermissions = function() {
  return /** @type{?proto.domain.Permissions} */ (
    jspb.Message.getWrapperField(this, domain_pb.Permissions, 1));
};


/** @param {?proto.domain.Permissions|undefined} value */
proto.permissions.GetPermissionsReply.prototype.setPermissions = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.permissions.GetPermissionsReply.oneofGroups_[0], value);
};


proto.permissions.GetPermissionsReply.prototype.clearPermissions = function() {
  this.setPermissions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.permissions.GetPermissionsReply.prototype.hasPermissions = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.permissions.GetPermissionsReply.Error}
 */
proto.permissions.GetPermissionsReply.prototype.getError = function() {
  return /** @type{?proto.permissions.GetPermissionsReply.Error} */ (
    jspb.Message.getWrapperField(this, proto.permissions.GetPermissionsReply.Error, 2));
};


/** @param {?proto.permissions.GetPermissionsReply.Error|undefined} value */
proto.permissions.GetPermissionsReply.prototype.setError = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.permissions.GetPermissionsReply.oneofGroups_[0], value);
};


proto.permissions.GetPermissionsReply.prototype.clearError = function() {
  this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.permissions.GetPermissionsReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.permissions.GetPermissionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.permissions.GetPermissionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.permissions.GetPermissionsRequest.displayName = 'proto.permissions.GetPermissionsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.permissions.GetPermissionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.permissions.GetPermissionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.permissions.GetPermissionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.GetPermissionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && domain_pb.ProtectedItem.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.permissions.GetPermissionsRequest}
 */
proto.permissions.GetPermissionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.permissions.GetPermissionsRequest;
  return proto.permissions.GetPermissionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.permissions.GetPermissionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.permissions.GetPermissionsRequest}
 */
proto.permissions.GetPermissionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new domain_pb.ProtectedItem;
      reader.readMessage(value,domain_pb.ProtectedItem.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.permissions.GetPermissionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.permissions.GetPermissionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.permissions.GetPermissionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.permissions.GetPermissionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      domain_pb.ProtectedItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional domain.ProtectedItem item = 1;
 * @return {?proto.domain.ProtectedItem}
 */
proto.permissions.GetPermissionsRequest.prototype.getItem = function() {
  return /** @type{?proto.domain.ProtectedItem} */ (
    jspb.Message.getWrapperField(this, domain_pb.ProtectedItem, 1));
};


/** @param {?proto.domain.ProtectedItem|undefined} value */
proto.permissions.GetPermissionsRequest.prototype.setItem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.permissions.GetPermissionsRequest.prototype.clearItem = function() {
  this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.permissions.GetPermissionsRequest.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.permissions);
